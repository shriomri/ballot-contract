{
	"id": "9aab1d2d05311568974a7355cad3d6fe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"BallotV2.sol": {
				"content": "pragma solidity 0.8.0;\ncontract BallotV2 {\n\n  struct Voter {\n    uint weight;\n    bool voted;\n    uint vote;\n  }\n\n  struct Proposal {\n    uint voteCount;\n  }\n\n  address chariperson;\n  mapping(address => Voter) voters;\n  Proposal[] proposals;\n\n  enum Phase { Init, Regs, Vote, Done }\n\n  Phase public state = Phase.Init;\n  \n  modifier validatePhase(Phase p) {\n    require(state == p);\n    _;\n  }\n\n  constructor (uint numProposal) public {\n    chariperson = msg.sender;\n    voters[chariperson].weight = 2;\n    for(uint prop=0; prop < numProposal; prop++) {\n      proposals.push(Proposal(0));\n    }\n  }\n\n  //function to change state, can be only done by chariperson\n  function changeState(Phase x) public {\n    if(msg.sender != chariperson) {\n      revert();\n    }\n\n    if(x < state) {\n      revert();\n    }\n\n    state = x;\n  }\n\n  function register(address voter) public validatePhase(Phase.Regs) {\n    if (msg.sender != chariperson || voters[voter].voted) return;\n    voters[voter].weight = 1;\n    voters[voter].voted = false;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BallotV2.sol": {
				"BallotV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numProposal",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "enum BallotV2.Phase",
									"name": "x",
									"type": "uint8"
								}
							],
							"name": "changeState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "state",
							"outputs": [
								{
									"internalType": "enum BallotV2.Phase",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BallotV2.sol\":23:1029  contract BallotV2 {... */\n  mstore(0x40, 0x80)\n    /* \"BallotV2.sol\":307:317  Phase.Init */\n  0x00\n    /* \"BallotV2.sol\":286:317  Phase public state = Phase.Init */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x21)\n  revert(0x00, 0x24)\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV2.sol\":397:598  constructor (uint numProposal) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"BallotV2.sol\":455:465  msg.sender */\n  caller\n    /* \"BallotV2.sol\":441:452  chariperson */\n  0x00\n  dup1\n    /* \"BallotV2.sol\":441:465  chariperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV2.sol\":500:501  2 */\n  0x02\n    /* \"BallotV2.sol\":471:477  voters */\n  0x01\n    /* \"BallotV2.sol\":471:490  voters[chariperson] */\n  0x00\n    /* \"BallotV2.sol\":478:489  chariperson */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BallotV2.sol\":471:490  voters[chariperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BallotV2.sol\":471:497  voters[chariperson].weight */\n  0x00\n  add\n    /* \"BallotV2.sol\":471:501  voters[chariperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotV2.sol\":511:520  uint prop */\n  0x00\n    /* \"BallotV2.sol\":507:594  for(uint prop=0; prop < numProposal; prop++) {... */\ntag_7:\n    /* \"BallotV2.sol\":531:542  numProposal */\n  dup2\n    /* \"BallotV2.sol\":524:528  prop */\n  dup2\n    /* \"BallotV2.sol\":524:542  prop < numProposal */\n  lt\n    /* \"BallotV2.sol\":507:594  for(uint prop=0; prop < numProposal; prop++) {... */\n  iszero\n  tag_8\n  jumpi\n    /* \"BallotV2.sol\":560:569  proposals */\n  0x02\n    /* \"BallotV2.sol\":575:586  Proposal(0) */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n    /* \"BallotV2.sol\":584:585  0 */\n  0x00\n    /* \"BallotV2.sol\":575:586  Proposal(0) */\n  dup2\n  mstore\n  pop\n    /* \"BallotV2.sol\":560:587  proposals.push(Proposal(0)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  pop\n  pop\n    /* \"BallotV2.sol\":544:550  prop++ */\n  dup1\n  dup1\n  tag_11\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  swap2\n  pop\n  pop\n    /* \"BallotV2.sol\":507:594  for(uint prop=0; prop < numProposal; prop++) {... */\n  jump(tag_7)\ntag_8:\n  pop\n    /* \"BallotV2.sol\":397:598  constructor (uint numProposal) public {... */\n  pop\n    /* \"BallotV2.sol\":23:1029  contract BallotV2 {... */\n  jump(tag_13)\n    /* \"#utility.yul\":7:150   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_17\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_4:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_20:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_21\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:523   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":512:517   */\n  dup2\n    /* \"#utility.yul\":501:517   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:523   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":529:762   */\ntag_12:\n  0x00\n    /* \"#utility.yul\":591:615   */\n  tag_25\n    /* \"#utility.yul\":609:614   */\n  dup3\n    /* \"#utility.yul\":591:615   */\n  tag_22\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":582:615   */\n  swap2\n  pop\n    /* \"#utility.yul\":637:703   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":630:635   */\n  dup3\n    /* \"#utility.yul\":627:704   */\n  eq\n    /* \"#utility.yul\":624:626   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":707:725   */\n  tag_27\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":624:626   */\ntag_26:\n    /* \"#utility.yul\":754:755   */\n  0x01\n    /* \"#utility.yul\":747:752   */\n  dup3\n    /* \"#utility.yul\":743:756   */\n  add\n    /* \"#utility.yul\":736:756   */\n  swap1\n  pop\n    /* \"#utility.yul\":572:762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":768:948   */\ntag_28:\n    /* \"#utility.yul\":816:893   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":813:814   */\n  0x00\n    /* \"#utility.yul\":806:894   */\n  mstore\n    /* \"#utility.yul\":913:917   */\n  0x11\n    /* \"#utility.yul\":910:911   */\n  0x04\n    /* \"#utility.yul\":903:918   */\n  mstore\n    /* \"#utility.yul\":937:941   */\n  0x24\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":927:942   */\n  revert\n    /* \"#utility.yul\":954:1076   */\ntag_18:\n    /* \"#utility.yul\":1027:1051   */\n  tag_31\n    /* \"#utility.yul\":1045:1050   */\n  dup2\n    /* \"#utility.yul\":1027:1051   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1020:1025   */\n  dup2\n    /* \"#utility.yul\":1017:1052   */\n  eq\n    /* \"#utility.yul\":1007:1009   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1066:1067   */\n  0x00\n    /* \"#utility.yul\":1063:1064   */\n  dup1\n    /* \"#utility.yul\":1056:1068   */\n  revert\n    /* \"#utility.yul\":1007:1009   */\ntag_32:\n    /* \"#utility.yul\":997:1076   */\n  pop\n  jump\t// out\n    /* \"BallotV2.sol\":23:1029  contract BallotV2 {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BallotV2.sol\":23:1029  contract BallotV2 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x268f1153\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4420e486\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc19d93fb\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BallotV2.sol\":664:823  function changeState(Phase x) public {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"BallotV2.sol\":827:1027  function register(address voter) public validatePhase(Phase.Regs) {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"BallotV2.sol\":286:317  Phase public state = Phase.Init */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV2.sol\":664:823  function changeState(Phase x) public {... */\n    tag_9:\n        /* \"BallotV2.sol\":724:735  chariperson */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV2.sol\":710:735  msg.sender != chariperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV2.sol\":710:720  msg.sender */\n      caller\n        /* \"BallotV2.sol\":710:735  msg.sender != chariperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BallotV2.sol\":707:760  if(msg.sender != chariperson) {... */\n      tag_19\n      jumpi\n        /* \"BallotV2.sol\":745:753  revert() */\n      0x00\n      dup1\n      revert\n        /* \"BallotV2.sol\":707:760  if(msg.sender != chariperson) {... */\n    tag_19:\n        /* \"BallotV2.sol\":773:778  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2.sol\":769:778  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_20:\n        /* \"BallotV2.sol\":769:770  x */\n      dup2\n        /* \"BallotV2.sol\":769:778  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_21:\n      lt\n        /* \"BallotV2.sol\":766:803  if(x < state) {... */\n      iszero\n      tag_22\n      jumpi\n        /* \"BallotV2.sol\":788:796  revert() */\n      0x00\n      dup1\n      revert\n        /* \"BallotV2.sol\":766:803  if(x < state) {... */\n    tag_22:\n        /* \"BallotV2.sol\":817:818  x */\n      dup1\n        /* \"BallotV2.sol\":809:814  state */\n      0x03\n      0x00\n        /* \"BallotV2.sol\":809:818  state = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_23:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV2.sol\":664:823  function changeState(Phase x) public {... */\n      pop\n      jump\t// out\n        /* \"BallotV2.sol\":827:1027  function register(address voter) public validatePhase(Phase.Regs) {... */\n    tag_13:\n        /* \"BallotV2.sol\":881:891  Phase.Regs */\n      0x01\n        /* \"BallotV2.sol\":379:380  p */\n      dup1\n        /* \"BallotV2.sol\":370:380  state == p */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_25\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_25:\n        /* \"BallotV2.sol\":370:375  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2.sol\":370:380  state == p */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_26\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_26:\n      eq\n        /* \"BallotV2.sol\":362:381  require(state == p) */\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n        /* \"BallotV2.sol\":917:928  chariperson */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV2.sol\":903:928  msg.sender != chariperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV2.sol\":903:913  msg.sender */\n      caller\n        /* \"BallotV2.sol\":903:928  msg.sender != chariperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BallotV2.sol\":903:951  msg.sender != chariperson || voters[voter].voted */\n      dup1\n      tag_29\n      jumpi\n      pop\n        /* \"BallotV2.sol\":932:938  voters */\n      0x01\n        /* \"BallotV2.sol\":932:945  voters[voter] */\n      0x00\n        /* \"BallotV2.sol\":939:944  voter */\n      dup4\n        /* \"BallotV2.sol\":932:945  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV2.sol\":932:951  voters[voter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2.sol\":903:951  msg.sender != chariperson || voters[voter].voted */\n    tag_29:\n        /* \"BallotV2.sol\":899:960  if (msg.sender != chariperson || voters[voter].voted) return; */\n      iszero\n      tag_30\n      jumpi\n        /* \"BallotV2.sol\":953:960  return; */\n      jump(tag_28)\n        /* \"BallotV2.sol\":899:960  if (msg.sender != chariperson || voters[voter].voted) return; */\n    tag_30:\n        /* \"BallotV2.sol\":988:989  1 */\n      0x01\n        /* \"BallotV2.sol\":965:971  voters */\n      dup1\n        /* \"BallotV2.sol\":965:978  voters[voter] */\n      0x00\n        /* \"BallotV2.sol\":972:977  voter */\n      dup5\n        /* \"BallotV2.sol\":965:978  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV2.sol\":965:985  voters[voter].weight */\n      0x00\n      add\n        /* \"BallotV2.sol\":965:989  voters[voter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV2.sol\":1017:1022  false */\n      0x00\n        /* \"BallotV2.sol\":995:1001  voters */\n      0x01\n        /* \"BallotV2.sol\":995:1008  voters[voter] */\n      0x00\n        /* \"BallotV2.sol\":1002:1007  voter */\n      dup5\n        /* \"BallotV2.sol\":995:1008  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV2.sol\":995:1014  voters[voter].voted */\n      0x01\n      add\n      0x00\n        /* \"BallotV2.sol\":995:1022  voters[voter].voted = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV2.sol\":387:388  _ */\n    tag_28:\n        /* \"BallotV2.sol\":827:1027  function register(address voter) public validatePhase(Phase.Regs) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BallotV2.sol\":286:317  Phase public state = Phase.Init */\n    tag_15:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_34\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:307   */\n    tag_36:\n      0x00\n        /* \"#utility.yul\":244:250   */\n      dup2\n        /* \"#utility.yul\":231:251   */\n      calldataload\n        /* \"#utility.yul\":222:251   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:301   */\n      tag_38\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":260:301   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":212:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:575   */\n    tag_12:\n      0x00\n        /* \"#utility.yul\":421:423   */\n      0x20\n        /* \"#utility.yul\":409:418   */\n      dup3\n        /* \"#utility.yul\":400:407   */\n      dup5\n        /* \"#utility.yul\":396:419   */\n      sub\n        /* \"#utility.yul\":392:424   */\n      slt\n        /* \"#utility.yul\":389:391   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":437:438   */\n      0x00\n        /* \"#utility.yul\":434:435   */\n      dup1\n        /* \"#utility.yul\":427:439   */\n      revert\n        /* \"#utility.yul\":389:391   */\n    tag_41:\n        /* \"#utility.yul\":480:481   */\n      0x00\n        /* \"#utility.yul\":505:558   */\n      tag_42\n        /* \"#utility.yul\":550:557   */\n      dup5\n        /* \"#utility.yul\":541:547   */\n      dup3\n        /* \"#utility.yul\":530:539   */\n      dup6\n        /* \"#utility.yul\":526:548   */\n      add\n        /* \"#utility.yul\":505:558   */\n      tag_32\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":495:558   */\n      swap2\n      pop\n        /* \"#utility.yul\":451:568   */\n      pop\n        /* \"#utility.yul\":379:575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:859   */\n    tag_8:\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:667   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":713:714   */\n      0x00\n        /* \"#utility.yul\":710:711   */\n      dup1\n        /* \"#utility.yul\":703:715   */\n      revert\n        /* \"#utility.yul\":665:667   */\n    tag_44:\n        /* \"#utility.yul\":756:757   */\n      0x00\n        /* \"#utility.yul\":781:842   */\n      tag_45\n        /* \"#utility.yul\":834:841   */\n      dup5\n        /* \"#utility.yul\":825:831   */\n      dup3\n        /* \"#utility.yul\":814:823   */\n      dup6\n        /* \"#utility.yul\":810:832   */\n      add\n        /* \"#utility.yul\":781:842   */\n      tag_36\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":771:842   */\n      swap2\n      pop\n        /* \"#utility.yul\":727:852   */\n      pop\n        /* \"#utility.yul\":655:859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":865:1008   */\n    tag_46:\n        /* \"#utility.yul\":958:1001   */\n      tag_48\n        /* \"#utility.yul\":995:1000   */\n      dup2\n        /* \"#utility.yul\":958:1001   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":953:956   */\n      dup3\n        /* \"#utility.yul\":946:1002   */\n      mstore\n        /* \"#utility.yul\":936:1008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1014:1248   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":1151:1153   */\n      0x20\n        /* \"#utility.yul\":1140:1149   */\n      dup3\n        /* \"#utility.yul\":1136:1154   */\n      add\n        /* \"#utility.yul\":1128:1154   */\n      swap1\n      pop\n        /* \"#utility.yul\":1164:1241   */\n      tag_51\n        /* \"#utility.yul\":1238:1239   */\n      0x00\n        /* \"#utility.yul\":1227:1236   */\n      dup4\n        /* \"#utility.yul\":1223:1240   */\n      add\n        /* \"#utility.yul\":1214:1220   */\n      dup5\n        /* \"#utility.yul\":1164:1241   */\n      tag_46\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1118:1248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1254:1350   */\n    tag_52:\n      0x00\n        /* \"#utility.yul\":1320:1344   */\n      tag_54\n        /* \"#utility.yul\":1338:1343   */\n      dup3\n        /* \"#utility.yul\":1320:1344   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1309:1344   */\n      swap1\n      pop\n        /* \"#utility.yul\":1299:1350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1356:1483   */\n    tag_56:\n      0x00\n        /* \"#utility.yul\":1430:1435   */\n      dup2\n        /* \"#utility.yul\":1419:1435   */\n      swap1\n      pop\n        /* \"#utility.yul\":1436:1477   */\n      tag_58\n        /* \"#utility.yul\":1471:1476   */\n      dup3\n        /* \"#utility.yul\":1436:1477   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1409:1483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1489:1615   */\n    tag_55:\n      0x00\n        /* \"#utility.yul\":1566:1608   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1559:1564   */\n      dup3\n        /* \"#utility.yul\":1555:1609   */\n      and\n        /* \"#utility.yul\":1544:1609   */\n      swap1\n      pop\n        /* \"#utility.yul\":1534:1615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1621:1748   */\n    tag_49:\n      0x00\n        /* \"#utility.yul\":1710:1742   */\n      tag_62\n        /* \"#utility.yul\":1736:1741   */\n      dup3\n        /* \"#utility.yul\":1710:1742   */\n      tag_56\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1697:1742   */\n      swap1\n      pop\n        /* \"#utility.yul\":1687:1748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1754:1934   */\n    tag_63:\n        /* \"#utility.yul\":1802:1879   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1799:1800   */\n      0x00\n        /* \"#utility.yul\":1792:1880   */\n      mstore\n        /* \"#utility.yul\":1899:1903   */\n      0x21\n        /* \"#utility.yul\":1896:1897   */\n      0x04\n        /* \"#utility.yul\":1889:1904   */\n      mstore\n        /* \"#utility.yul\":1923:1927   */\n      0x24\n        /* \"#utility.yul\":1920:1921   */\n      0x00\n        /* \"#utility.yul\":1913:1928   */\n      revert\n        /* \"#utility.yul\":1940:2053   */\n    tag_59:\n        /* \"#utility.yul\":2021:2022   */\n      0x04\n        /* \"#utility.yul\":2014:2019   */\n      dup2\n        /* \"#utility.yul\":2011:2023   */\n      lt\n        /* \"#utility.yul\":2001:2003   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":2027:2045   */\n      tag_67\n      tag_63\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2001:2003   */\n    tag_66:\n        /* \"#utility.yul\":1991:2053   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2181   */\n    tag_35:\n        /* \"#utility.yul\":2132:2156   */\n      tag_69\n        /* \"#utility.yul\":2150:2155   */\n      dup2\n        /* \"#utility.yul\":2132:2156   */\n      tag_52\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2125:2130   */\n      dup2\n        /* \"#utility.yul\":2122:2157   */\n      eq\n        /* \"#utility.yul\":2112:2114   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2171:2172   */\n      0x00\n        /* \"#utility.yul\":2168:2169   */\n      dup1\n        /* \"#utility.yul\":2161:2173   */\n      revert\n        /* \"#utility.yul\":2112:2114   */\n    tag_70:\n        /* \"#utility.yul\":2102:2181   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2294   */\n    tag_39:\n        /* \"#utility.yul\":2268:2269   */\n      0x04\n        /* \"#utility.yul\":2261:2266   */\n      dup2\n        /* \"#utility.yul\":2258:2270   */\n      lt\n        /* \"#utility.yul\":2248:2250   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":2284:2285   */\n      0x00\n        /* \"#utility.yul\":2281:2282   */\n      dup1\n        /* \"#utility.yul\":2274:2286   */\n      revert\n        /* \"#utility.yul\":2248:2250   */\n    tag_72:\n        /* \"#utility.yul\":2238:2294   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201d8f72d0a81c8529c2163f2bc96536c87d441f3f226e092061a47aad658d837764736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1079:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:284:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "512:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:1",
														"type": ""
													}
												],
												"src": "446:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "572:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "582:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "609:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "591:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "582:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "705:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "707:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "630:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "637:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "627:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:77:1"
															},
															"nodeType": "YulIf",
															"src": "624:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "736:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "747:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "743:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "736:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "558:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "568:3:1",
														"type": ""
													}
												],
												"src": "529:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "910:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "903:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "768:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "997:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1054:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1063:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1066:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1056:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1056:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1056:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1020:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1045:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1027:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1027:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1017:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1017:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:43:1"
															},
															"nodeType": "YulIf",
															"src": "1007:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "990:5:1",
														"type": ""
													}
												],
												"src": "954:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526000600360006101000a81548160ff02191690836003811115610050577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555034801561006157600080fd5b506040516107e23803806107e2833981810160405281019061008391906101a9565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060005b8181101561018d57600260405180602001604052806000815250908060018154018082558091505060019003906000526020600020016000909190919091506000820151816000015550508080610185906101dc565b91505061012f565b505061026b565b6000815190506101a381610254565b92915050565b6000602082840312156101bb57600080fd5b60006101c984828501610194565b91505092915050565b6000819050919050565b60006101e7826101d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561021a57610219610225565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61025d816101d2565b811461026857600080fd5b50565b6105688061027a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063268f1153146100465780634420e48614610062578063c19d93fb1461007e575b600080fd5b610060600480360381019061005b919061041e565b61009c565b005b61007c600480360381019061007791906103f5565b6101d3565b005b6100866103b8565b6040516100939190610456565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100f457600080fd5b600360009054906101000a900460ff16600381111561013c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816003811115610175577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b101561018057600080fd5b80600360006101000a81548160ff021916908360038111156101cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555050565b600180600381111561020e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360009054906101000a900460ff166003811115610256577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461026057600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806103075750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b15610311576103b4565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b5050565b600360009054906101000a900460ff1681565b6000813590506103da8161050b565b92915050565b6000813590506103ef81610522565b92915050565b60006020828403121561040757600080fd5b6000610415848285016103cb565b91505092915050565b60006020828403121561043057600080fd5b600061043e848285016103e0565b91505092915050565b610450816104b6565b82525050565b600060208201905061046b6000830184610447565b92915050565b600061047c82610496565b9050919050565b6000819050610491826104f7565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104c182610483565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610508576105076104c8565b5b50565b61051481610471565b811461051f57600080fd5b50565b6004811061052f57600080fd5b5056fea26469706673582212201d8f72d0a81c8529c2163f2bc96536c87d441f3f226e092061a47aad658d837764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x50 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7E2 CODESIZE SUB DUP1 PUSH2 0x7E2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x1A9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP DUP1 DUP1 PUSH2 0x185 SWAP1 PUSH2 0x1DC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12F JUMP JUMPDEST POP POP PUSH2 0x26B JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A3 DUP2 PUSH2 0x254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C9 DUP5 DUP3 DUP6 ADD PUSH2 0x194 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7 DUP3 PUSH2 0x1D2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x225 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x25D DUP2 PUSH2 0x1D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x568 DUP1 PUSH2 0x27A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x268F1153 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x7E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x175 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x256 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x307 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x311 JUMPI PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3DA DUP2 PUSH2 0x50B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EF DUP2 PUSH2 0x522 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x415 DUP5 DUP3 DUP6 ADD PUSH2 0x3CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x43E DUP5 DUP3 DUP6 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x450 DUP2 PUSH2 0x4B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C DUP3 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x491 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C1 DUP3 PUSH2 0x483 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x508 JUMPI PUSH2 0x507 PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x514 DUP2 PUSH2 0x471 JUMP JUMPDEST DUP2 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR DUP16 PUSH19 0xD0A81C8529C2163F2BC96536C87D441F3F226E MULMOD KECCAK256 PUSH2 0xA47A 0xAD PUSH6 0x8D837764736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "23:1006:0:-:0;;;307:10;286:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;397:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;455:10;441:11;;:24;;;;;;;;;;;;;;;;;;500:1;471:6;:19;478:11;;;;;;;;;;;471:19;;;;;;;;;;;;;;;:26;;:30;;;;511:9;507:87;531:11;524:4;:18;507:87;;;560:9;575:11;;;;;;;;584:1;575:11;;;560:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:6;;;;;:::i;:::-;;;;507:87;;;;397:201;23:1006;;7:143:1;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:77::-;;512:5;501:16;;491:32;;;:::o;529:233::-;;591:24;609:5;591:24;:::i;:::-;582:33;;637:66;630:5;627:77;624:2;;;707:18;;:::i;:::-;624:2;754:1;747:5;743:13;736:20;;572:190;;;:::o;768:180::-;816:77;813:1;806:88;913:4;910:1;903:15;937:4;934:1;927:15;954:122;1027:24;1045:5;1027:24;:::i;:::-;1020:5;1017:35;1007:2;;1066:1;1063;1056:12;1007:2;997:79;:::o;23:1006:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2297:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "231:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Phase_$27",
																	"nodeType": "YulIdentifier",
																	"src": "260:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:41:1"
														}
													]
												},
												"name": "abi_decode_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:1",
														"type": ""
													}
												],
												"src": "152:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "425:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "434:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "437:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "427:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "427:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "427:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "400:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "409:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "396:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "396:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "421:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "392:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:32:1"
															},
															"nodeType": "YulIf",
															"src": "389:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "451:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "466:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "480:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "470:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "495:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "530:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "541:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "526:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "526:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "550:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "505:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "505:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "495:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "349:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "360:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "372:6:1",
														"type": ""
													}
												],
												"src": "313:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:204:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "703:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:1"
															},
															"nodeType": "YulIf",
															"src": "665:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "727:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "742:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "756:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "746:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "771:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "814:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "825:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "810:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "810:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "834:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Phase_$27",
																			"nodeType": "YulIdentifier",
																			"src": "781:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "781:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "771:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:1",
														"type": ""
													}
												],
												"src": "581:278:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "936:72:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "995:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Phase_$27_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "958:36:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "958:43:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "946:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "946:56:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "924:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "931:3:1",
														"type": ""
													}
												],
												"src": "865:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1118:130:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1128:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1140:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1136:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1128:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1214:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1227:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1238:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1223:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1223:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1164:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:77:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1164:77:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Phase_$27__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1090:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1102:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1113:4:1",
														"type": ""
													}
												],
												"src": "1014:234:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1309:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1338:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1320:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1320:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1309:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1281:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1291:7:1",
														"type": ""
													}
												],
												"src": "1254:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:74:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1419:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1430:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1419:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1471:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Phase_$27",
																	"nodeType": "YulIdentifier",
																	"src": "1436:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1436:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1436:41:1"
														}
													]
												},
												"name": "cleanup_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1401:7:1",
														"type": ""
													}
												],
												"src": "1356:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1534:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1544:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1559:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1566:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1544:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1516:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1526:7:1",
														"type": ""
													}
												],
												"src": "1489:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:61:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1697:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1736:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Phase_$27",
																	"nodeType": "YulIdentifier",
																	"src": "1710:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:32:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1697:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Phase_$27_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1667:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1677:9:1",
														"type": ""
													}
												],
												"src": "1621:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1799:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1802:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1792:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1896:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1899:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1920:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1923:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1913:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1913:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1913:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "1754:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1991:62:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2025:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "2027:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2027:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2014:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2021:1:1",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2011:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2011:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:20:1"
															},
															"nodeType": "YulIf",
															"src": "2001:2:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1984:5:1",
														"type": ""
													}
												],
												"src": "1940:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2102:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2159:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2168:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2171:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2161:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2161:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2161:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2125:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2150:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2132:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2132:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2122:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:43:1"
															},
															"nodeType": "YulIf",
															"src": "2112:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2095:5:1",
														"type": ""
													}
												],
												"src": "2059:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2238:56:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2272:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2281:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2284:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2274:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2274:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2274:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2261:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2268:1:1",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2258:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2258:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2251:20:1"
															},
															"nodeType": "YulIf",
															"src": "2248:2:1"
														}
													]
												},
												"name": "validator_revert_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:1",
														"type": ""
													}
												],
												"src": "2187:107:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_enum$_Phase_$27(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Phase_$27(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Phase_$27(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Phase_$27(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Phase_$27_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Phase_$27__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_Phase_$27(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Phase_$27(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_enum$_Phase_$27_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Phase_$27(value)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Phase_$27(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Phase_$27(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063268f1153146100465780634420e48614610062578063c19d93fb1461007e575b600080fd5b610060600480360381019061005b919061041e565b61009c565b005b61007c600480360381019061007791906103f5565b6101d3565b005b6100866103b8565b6040516100939190610456565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100f457600080fd5b600360009054906101000a900460ff16600381111561013c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816003811115610175577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b101561018057600080fd5b80600360006101000a81548160ff021916908360038111156101cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555050565b600180600381111561020e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360009054906101000a900460ff166003811115610256577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461026057600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806103075750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b15610311576103b4565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b5050565b600360009054906101000a900460ff1681565b6000813590506103da8161050b565b92915050565b6000813590506103ef81610522565b92915050565b60006020828403121561040757600080fd5b6000610415848285016103cb565b91505092915050565b60006020828403121561043057600080fd5b600061043e848285016103e0565b91505092915050565b610450816104b6565b82525050565b600060208201905061046b6000830184610447565b92915050565b600061047c82610496565b9050919050565b6000819050610491826104f7565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104c182610483565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610508576105076104c8565b5b50565b61051481610471565b811461051f57600080fd5b50565b6004811061052f57600080fd5b5056fea26469706673582212201d8f72d0a81c8529c2163f2bc96536c87d441f3f226e092061a47aad658d837764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x268F1153 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x7E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x175 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x256 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x307 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x311 JUMPI PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3DA DUP2 PUSH2 0x50B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EF DUP2 PUSH2 0x522 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x415 DUP5 DUP3 DUP6 ADD PUSH2 0x3CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x43E DUP5 DUP3 DUP6 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x450 DUP2 PUSH2 0x4B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C DUP3 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x491 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C1 DUP3 PUSH2 0x483 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x508 JUMPI PUSH2 0x507 PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x514 DUP2 PUSH2 0x471 JUMP JUMPDEST DUP2 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR DUP16 PUSH19 0xD0A81C8529C2163F2BC96536C87D441F3F226E MULMOD KECCAK256 PUSH2 0xA47A 0xAD PUSH6 0x8D837764736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "23:1006:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;827:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;286:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;664:159;724:11;;;;;;;;;;710:25;;:10;:25;;;707:53;;745:8;;;707:53;773:5;;;;;;;;;;;769:9;;;;;;;;;;;;;;;;:1;:9;;;;;;;;;;;;;;;;;766:37;;;788:8;;;766:37;817:1;809:5;;:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:159;:::o;827:200::-;881:10;379:1;370:10;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:10;;;;;;;;;;;;;;;;;362:19;;;;;;917:11:::1;::::0;::::1;;;;;;;;903:25;;:10;:25;;;;:48;;;;932:6;:13;939:5;932:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;903:48;899:61;;;953:7;;899:61;988:1;965:6:::0;:13:::1;972:5;965:13;;;;;;;;;;;;;;;:20;;:24;;;;1017:5;995:6;:13;1002:5;995:13;;;;;;;;;;;;;;;:19;;;:27;;;;;;;;;;;;;;;;;;387:1;827:200:::0;;:::o;286:31::-;;;;;;;;;;;;;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:262::-;;421:2;409:9;400:7;396:23;392:32;389:2;;;437:1;434;427:12;389:2;480:1;505:53;550:7;541:6;530:9;526:22;505:53;:::i;:::-;495:63;;451:117;379:196;;;;:::o;581:278::-;;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:61;834:7;825:6;814:9;810:22;781:61;:::i;:::-;771:71;;727:125;655:204;;;;:::o;865:143::-;958:43;995:5;958:43;:::i;:::-;953:3;946:56;936:72;;:::o;1014:234::-;;1151:2;1140:9;1136:18;1128:26;;1164:77;1238:1;1227:9;1223:17;1214:6;1164:77;:::i;:::-;1118:130;;;;:::o;1254:96::-;;1320:24;1338:5;1320:24;:::i;:::-;1309:35;;1299:51;;;:::o;1356:127::-;;1430:5;1419:16;;1436:41;1471:5;1436:41;:::i;:::-;1409:74;;;:::o;1489:126::-;;1566:42;1559:5;1555:54;1544:65;;1534:81;;;:::o;1621:127::-;;1710:32;1736:5;1710:32;:::i;:::-;1697:45;;1687:61;;;:::o;1754:180::-;1802:77;1799:1;1792:88;1899:4;1896:1;1889:15;1923:4;1920:1;1913:15;1940:113;2021:1;2014:5;2011:12;2001:2;;2027:18;;:::i;:::-;2001:2;1991:62;:::o;2059:122::-;2132:24;2150:5;2132:24;:::i;:::-;2125:5;2122:35;2112:2;;2171:1;2168;2161:12;2112:2;2102:79;:::o;2187:107::-;2268:1;2261:5;2258:12;2248:2;;2284:1;2281;2274:12;2248:2;2238:56;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "276800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changeState(uint8)": "23009",
								"register(address)": "44272",
								"state()": "1282"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23,
									"end": 1029,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 307,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 455,
									"end": 465,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 441,
									"end": 452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 452,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 500,
									"end": 501,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 471,
									"end": 477,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 471,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 497,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 511,
									"end": 520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 531,
									"end": 542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 524,
									"end": 528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 524,
									"end": 542,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 560,
									"end": 569,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 584,
									"end": 585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 523,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 446,
									"end": 523,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 446,
									"end": 523,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 501,
									"end": 517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 501,
									"end": 517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 529,
									"end": 762,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 529,
									"end": 762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 529,
									"end": 762,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 609,
									"end": 614,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 591,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 582,
									"end": 615,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 582,
									"end": 615,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 637,
									"end": 703,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 630,
									"end": 635,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 627,
									"end": 704,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 624,
									"end": 626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 707,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 624,
									"end": 626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 754,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 747,
									"end": 752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 743,
									"end": 756,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 736,
									"end": 756,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 736,
									"end": 756,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 816,
									"end": 893,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 813,
									"end": 814,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 913,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 903,
									"end": 918,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 937,
									"end": 941,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 927,
									"end": 942,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1076,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 954,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1045,
									"end": 1050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1025,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1052,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1067,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1064,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1068,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 1029,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201d8f72d0a81c8529c2163f2bc96536c87d441f3f226e092061a47aad658d837764736f6c63430008000033",
									".code": [
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "268F1153"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "4420E486"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "C19D93FB"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 710,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 710,
											"end": 735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 710,
											"end": 720,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 710,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 710,
											"end": 735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 710,
											"end": 735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 707,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 707,
											"end": 760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 745,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 707,
											"end": 760,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 707,
											"end": 760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 769,
											"end": 770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 766,
											"end": 803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 766,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 766,
											"end": 803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 788,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 788,
											"end": 796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 766,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 766,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 809,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 881,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 379,
											"end": 380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 917,
											"end": 928,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 917,
											"end": 928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 903,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 903,
											"end": 928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 903,
											"end": 913,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 903,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 903,
											"end": 928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 903,
											"end": 928,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 903,
											"end": 928,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 903,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 903,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 903,
											"end": 951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 903,
											"end": 951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 932,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 932,
											"end": 951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 932,
											"end": 951,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 932,
											"end": 951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 903,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 903,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 899,
											"end": 960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 899,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 899,
											"end": 960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 953,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 899,
											"end": 960,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 899,
											"end": 960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 988,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 965,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 977,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 965,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 989,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1007,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 995,
											"end": 1014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 231,
											"end": 251,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 222,
											"end": 251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 575,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 313,
											"end": 575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 313,
											"end": 575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 407,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 396,
											"end": 419,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 392,
											"end": 424,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 389,
											"end": 391,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 389,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 389,
											"end": 391,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 437,
											"end": 438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 427,
											"end": 439,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 389,
											"end": 391,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 389,
											"end": 391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 480,
											"end": 481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 550,
											"end": 557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 541,
											"end": 547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 539,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 526,
											"end": 548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 505,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 505,
											"end": 558,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 558,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 505,
											"end": 558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 495,
											"end": 558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 495,
											"end": 558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 379,
											"end": 575,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 379,
											"end": 575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 379,
											"end": 575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 379,
											"end": 575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 379,
											"end": 575,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 581,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 581,
											"end": 859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 665,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 665,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 713,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 703,
											"end": 715,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 665,
											"end": 667,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 756,
											"end": 757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 834,
											"end": 841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 825,
											"end": 831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 814,
											"end": 823,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 810,
											"end": 832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 781,
											"end": 842,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 781,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 781,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 727,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 859,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 865,
											"end": 1008,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 865,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 995,
											"end": 1000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 958,
											"end": 1001,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 958,
											"end": 1001,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 958,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1008,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1014,
											"end": 1248,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1014,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1238,
											"end": 1239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1236,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1164,
											"end": 1241,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1164,
											"end": 1241,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1164,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1248,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1248,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1254,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1254,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1320,
											"end": 1344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1320,
											"end": 1344,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1320,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1356,
											"end": 1483,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1356,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1471,
											"end": 1476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1436,
											"end": 1477,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1436,
											"end": 1477,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1436,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1483,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1489,
											"end": 1615,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1489,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1608,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1609,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1615,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1615,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1621,
											"end": 1748,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1621,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1736,
											"end": 1741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1710,
											"end": 1742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1742,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1710,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1748,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1754,
											"end": 1934,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1754,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1879,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1799,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1903,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1889,
											"end": 1904,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1920,
											"end": 1921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2053,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1940,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2023,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2001,
											"end": 2003,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2003,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2001,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2053,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2157,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2181,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2187,
											"end": 2294,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2187,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2261,
											"end": 2266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2270,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2286,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2294,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeState(uint8)": "268f1153",
							"register(address)": "4420e486",
							"state()": "c19d93fb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numProposal\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum BallotV2.Phase\",\"name\":\"x\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum BallotV2.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BallotV2.sol\":\"BallotV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BallotV2.sol\":{\"keccak256\":\"0x19812163ebc2310889ea61a41379fddffffa81f0f984e7ae9b52934f7033d316\",\"urls\":[\"bzz-raw://42416060710b5cf295ca95d255dee1d6a5854ea645c31b60f18544b94d779142\",\"dweb:/ipfs/QmevYHFZbmcPr2bQ6yjktue6tST5dzfRokuiFHWrFERJ2c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "BallotV2.sol:BallotV2",
								"label": "chariperson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 18,
								"contract": "BallotV2.sol:BallotV2",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)8_storage)"
							},
							{
								"astId": 22,
								"contract": "BallotV2.sol:BallotV2",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)11_storage)dyn_storage"
							},
							{
								"astId": 32,
								"contract": "BallotV2.sol:BallotV2",
								"label": "state",
								"offset": 0,
								"slot": "3",
								"type": "t_enum(Phase)27"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)11_storage)dyn_storage": {
								"base": "t_struct(Proposal)11_storage",
								"encoding": "dynamic_array",
								"label": "struct BallotV2.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(Phase)27": {
								"encoding": "inplace",
								"label": "enum BallotV2.Phase",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Voter)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct BallotV2.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)8_storage"
							},
							"t_struct(Proposal)11_storage": {
								"encoding": "inplace",
								"label": "struct BallotV2.Proposal",
								"members": [
									{
										"astId": 10,
										"contract": "BallotV2.sol:BallotV2",
										"label": "voteCount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Voter)8_storage": {
								"encoding": "inplace",
								"label": "struct BallotV2.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "BallotV2.sol:BallotV2",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "BallotV2.sol:BallotV2",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 7,
										"contract": "BallotV2.sol:BallotV2",
										"label": "vote",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BallotV2.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BallotV2.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> BallotV2.sol:27:3:\n   |\n27 |   constructor (uint numProposal) public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 598,
					"file": "BallotV2.sol",
					"start": 397
				},
				"type": "Warning"
			}
		],
		"sources": {
			"BallotV2.sol": {
				"ast": {
					"absolutePath": "BallotV2.sol",
					"exportedSymbols": {
						"BallotV2": [
							147
						]
					},
					"id": 148,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147
							],
							"name": "BallotV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "BallotV2.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "65:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "65:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "82:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "82:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "98:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "98:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 147,
									"src": "46:66:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BallotV2.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "138:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "138:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 147,
									"src": "116:41:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "chariperson",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "161:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "161:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "184:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct BallotV2.Voter)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "192:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "184:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct BallotV2.Voter)"
										},
										"valueType": {
											"id": 16,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 15,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "203:5:0"
											},
											"referencedDeclaration": 8,
											"src": "203:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct BallotV2.Voter"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "220:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct BallotV2.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 20,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 19,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "220:8:0"
											},
											"referencedDeclaration": 11,
											"src": "220:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct BallotV2.Proposal"
											}
										},
										"id": 21,
										"nodeType": "ArrayTypeName",
										"src": "220:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct BallotV2.Proposal[]"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "BallotV2.Phase",
									"id": 27,
									"members": [
										{
											"id": 23,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "258:4:0"
										},
										{
											"id": 24,
											"name": "Regs",
											"nodeType": "EnumValue",
											"src": "264:4:0"
										},
										{
											"id": 25,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "270:4:0"
										},
										{
											"id": 26,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "276:4:0"
										}
									],
									"name": "Phase",
									"nodeType": "EnumDefinition",
									"src": "245:37:0"
								},
								{
									"constant": false,
									"functionSelector": "c19d93fb",
									"id": 32,
									"mutability": "mutable",
									"name": "state",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "286:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Phase_$27",
										"typeString": "enum BallotV2.Phase"
									},
									"typeName": {
										"id": 29,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 28,
											"name": "Phase",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 27,
											"src": "286:5:0"
										},
										"referencedDeclaration": 27,
										"src": "286:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$27",
											"typeString": "enum BallotV2.Phase"
										}
									},
									"value": {
										"expression": {
											"id": 30,
											"name": "Phase",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 27,
											"src": "307:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Phase_$27_$",
												"typeString": "type(enum BallotV2.Phase)"
											}
										},
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"src": "307:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$27",
											"typeString": "enum BallotV2.Phase"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "356:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Phase_$27",
																"typeString": "enum BallotV2.Phase"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 38,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "370:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$27",
																	"typeString": "enum BallotV2.Phase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 39,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "379:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$27",
																	"typeString": "enum BallotV2.Phase"
																}
															},
															"src": "370:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "362:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "362:19:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "387:1:0"
											}
										]
									},
									"id": 45,
									"name": "validatePhase",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "p",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "347:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$27",
													"typeString": "enum BallotV2.Phase"
												},
												"typeName": {
													"id": 34,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 33,
														"name": "Phase",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "347:5:0"
													},
													"referencedDeclaration": 27,
													"src": "347:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:9:0"
									},
									"src": "324:69:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "435:163:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "chariperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "441:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 51,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "455:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "455:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "441:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "441:24:0"
											},
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 55,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "471:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV2.Voter storage ref)"
																}
															},
															"id": 57,
															"indexExpression": {
																"id": 56,
																"name": "chariperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "478:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "471:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV2.Voter storage ref"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "471:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "471:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "471:30:0"
											},
											{
												"body": {
													"id": 80,
													"nodeType": "Block",
													"src": "552:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "584:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 75,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "575:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$11_storage_ptr_$",
																				"typeString": "type(struct BallotV2.Proposal storage pointer)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "575:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$11_memory_ptr",
																			"typeString": "struct BallotV2.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$11_memory_ptr",
																			"typeString": "struct BallotV2.Proposal memory"
																		}
																	],
																	"expression": {
																		"id": 72,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "560:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																			"typeString": "struct BallotV2.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "560:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$11_storage_$returns$__$",
																		"typeString": "function (struct BallotV2.Proposal storage ref)"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "560:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 79,
															"nodeType": "ExpressionStatement",
															"src": "560:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "524:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 67,
														"name": "numProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "524:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 81,
												"initializationExpression": {
													"assignments": [
														63
													],
													"declarations": [
														{
															"constant": false,
															"id": 63,
															"mutability": "mutable",
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 81,
															"src": "511:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 62,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "511:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 65,
													"initialValue": {
														"hexValue": "30",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "521:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "511:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "544:6:0",
														"subExpression": {
															"id": 69,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "544:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 71,
													"nodeType": "ExpressionStatement",
													"src": "544:6:0"
												},
												"nodeType": "ForStatement",
												"src": "507:87:0"
											}
										]
									},
									"id": 83,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "numProposal",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "410:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:18:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:0:0"
									},
									"scope": 147,
									"src": "397:201:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "701:122:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 89,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "710:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "710:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 91,
														"name": "chariperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "724:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "710:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "IfStatement",
												"src": "707:53:0",
												"trueBody": {
													"id": 96,
													"nodeType": "Block",
													"src": "737:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 93,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "745:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "745:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 95,
															"nodeType": "ExpressionStatement",
															"src": "745:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 98,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "769:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 99,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "773:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"src": "769:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "766:37:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "780:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 101,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "788:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "788:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "ExpressionStatement",
															"src": "788:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 106,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "809:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 107,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "817:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"src": "809:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "809:9:0"
											}
										]
									},
									"functionSelector": "268f1153",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeState",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "685:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$27",
													"typeString": "enum BallotV2.Phase"
												},
												"typeName": {
													"id": 85,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 84,
														"name": "Phase",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "685:5:0"
													},
													"referencedDeclaration": 27,
													"src": "685:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:9:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:0:0"
									},
									"scope": 147,
									"src": "664:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "893:134:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "903:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "903:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 122,
															"name": "chariperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "917:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "903:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 124,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "932:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV2.Voter storage ref)"
																}
															},
															"id": 126,
															"indexExpression": {
																"id": 125,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "939:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "932:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV2.Voter storage ref"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "932:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "903:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 130,
												"nodeType": "IfStatement",
												"src": "899:61:0",
												"trueBody": {
													"functionReturnParameters": 119,
													"id": 129,
													"nodeType": "Return",
													"src": "953:7:0"
												}
											},
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 131,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "965:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV2.Voter storage ref)"
																}
															},
															"id": 133,
															"indexExpression": {
																"id": 132,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "972:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "965:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV2.Voter storage ref"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "965:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "988:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "965:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "965:24:0"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 138,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "995:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV2.Voter storage ref)"
																}
															},
															"id": 140,
															"indexExpression": {
																"id": 139,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1002:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "995:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV2.Voter storage ref"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "995:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1017:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "995:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "995:27:0"
											}
										]
									},
									"functionSelector": "4420e486",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 116,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "881:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$27_$",
															"typeString": "type(enum BallotV2.Phase)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Regs",
													"nodeType": "MemberAccess",
													"src": "881:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												}
											],
											"id": 118,
											"modifierName": {
												"id": 115,
												"name": "validatePhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "867:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "867:25:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "voter",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:15:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:0"
									},
									"scope": 147,
									"src": "827:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 148,
							"src": "23:1006:0"
						}
					],
					"src": "0:1029:0"
				},
				"id": 0
			}
		}
	}
}