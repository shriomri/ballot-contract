{
	"id": "915e588198295e4494f141a8cf0f8881",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"BallotV2.sol": {
				"content": "pragma solidity 0.8.0;\ncontract BallotV2 {\n\n  struct Voter {\n    uint weight;\n    bool voted;\n    uint vote;\n  }\n\n  struct Proposal {\n    uint voteCount;\n  }\n\n  address chariperson;\n  mapping(address => Voter) voters;\n  Proposal[] proposals;\n\n  enum Phase { Init, Regs, Vote, Done }\n\n  Phase public state = Phase.Init;\n  \n  modifier validatePhase(Phase p) {\n    require(state == p);\n    _;\n  }\n\n  constructor (uint numProposal) public {\n    chariperson = msg.sender;\n    voters[chariperson].weight = 2;\n    for(uint prop=0; prop < numProposal; prop++) {\n      proposals.push(Proposal(0));\n    }\n  }\n\n  //function to change state, can be only done by chariperson\n  function changeState(Phase x) public validatePhase(Phase.Regs) {\n    // if(msg.sender != chariperson) {\n    //   revert();\n    // }\n\n    if(x < state) {\n      revert();\n    }\n\n    state = x;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BallotV2.sol": {
				"BallotV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numProposal",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "enum BallotV2.Phase",
									"name": "x",
									"type": "uint8"
								}
							],
							"name": "changeState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "state",
							"outputs": [
								{
									"internalType": "enum BallotV2.Phase",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BallotV2.sol\":23:860  contract BallotV2 {... */\n  mstore(0x40, 0x80)\n    /* \"BallotV2.sol\":307:317  Phase.Init */\n  0x00\n    /* \"BallotV2.sol\":286:317  Phase public state = Phase.Init */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x21)\n  revert(0x00, 0x24)\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV2.sol\":397:598  constructor (uint numProposal) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"BallotV2.sol\":455:465  msg.sender */\n  caller\n    /* \"BallotV2.sol\":441:452  chariperson */\n  0x00\n  dup1\n    /* \"BallotV2.sol\":441:465  chariperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV2.sol\":500:501  2 */\n  0x02\n    /* \"BallotV2.sol\":471:477  voters */\n  0x01\n    /* \"BallotV2.sol\":471:490  voters[chariperson] */\n  0x00\n    /* \"BallotV2.sol\":478:489  chariperson */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BallotV2.sol\":471:490  voters[chariperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BallotV2.sol\":471:497  voters[chariperson].weight */\n  0x00\n  add\n    /* \"BallotV2.sol\":471:501  voters[chariperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotV2.sol\":511:520  uint prop */\n  0x00\n    /* \"BallotV2.sol\":507:594  for(uint prop=0; prop < numProposal; prop++) {... */\ntag_7:\n    /* \"BallotV2.sol\":531:542  numProposal */\n  dup2\n    /* \"BallotV2.sol\":524:528  prop */\n  dup2\n    /* \"BallotV2.sol\":524:542  prop < numProposal */\n  lt\n    /* \"BallotV2.sol\":507:594  for(uint prop=0; prop < numProposal; prop++) {... */\n  iszero\n  tag_8\n  jumpi\n    /* \"BallotV2.sol\":560:569  proposals */\n  0x02\n    /* \"BallotV2.sol\":575:586  Proposal(0) */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n    /* \"BallotV2.sol\":584:585  0 */\n  0x00\n    /* \"BallotV2.sol\":575:586  Proposal(0) */\n  dup2\n  mstore\n  pop\n    /* \"BallotV2.sol\":560:587  proposals.push(Proposal(0)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  pop\n  pop\n    /* \"BallotV2.sol\":544:550  prop++ */\n  dup1\n  dup1\n  tag_11\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  swap2\n  pop\n  pop\n    /* \"BallotV2.sol\":507:594  for(uint prop=0; prop < numProposal; prop++) {... */\n  jump(tag_7)\ntag_8:\n  pop\n    /* \"BallotV2.sol\":397:598  constructor (uint numProposal) public {... */\n  pop\n    /* \"BallotV2.sol\":23:860  contract BallotV2 {... */\n  jump(tag_13)\n    /* \"#utility.yul\":7:150   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_17\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_4:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_20:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_21\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:523   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":512:517   */\n  dup2\n    /* \"#utility.yul\":501:517   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:523   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":529:762   */\ntag_12:\n  0x00\n    /* \"#utility.yul\":591:615   */\n  tag_25\n    /* \"#utility.yul\":609:614   */\n  dup3\n    /* \"#utility.yul\":591:615   */\n  tag_22\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":582:615   */\n  swap2\n  pop\n    /* \"#utility.yul\":637:703   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":630:635   */\n  dup3\n    /* \"#utility.yul\":627:704   */\n  eq\n    /* \"#utility.yul\":624:626   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":707:725   */\n  tag_27\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":624:626   */\ntag_26:\n    /* \"#utility.yul\":754:755   */\n  0x01\n    /* \"#utility.yul\":747:752   */\n  dup3\n    /* \"#utility.yul\":743:756   */\n  add\n    /* \"#utility.yul\":736:756   */\n  swap1\n  pop\n    /* \"#utility.yul\":572:762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":768:948   */\ntag_28:\n    /* \"#utility.yul\":816:893   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":813:814   */\n  0x00\n    /* \"#utility.yul\":806:894   */\n  mstore\n    /* \"#utility.yul\":913:917   */\n  0x11\n    /* \"#utility.yul\":910:911   */\n  0x04\n    /* \"#utility.yul\":903:918   */\n  mstore\n    /* \"#utility.yul\":937:941   */\n  0x24\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":927:942   */\n  revert\n    /* \"#utility.yul\":954:1076   */\ntag_18:\n    /* \"#utility.yul\":1027:1051   */\n  tag_31\n    /* \"#utility.yul\":1045:1050   */\n  dup2\n    /* \"#utility.yul\":1027:1051   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1020:1025   */\n  dup2\n    /* \"#utility.yul\":1017:1052   */\n  eq\n    /* \"#utility.yul\":1007:1009   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1066:1067   */\n  0x00\n    /* \"#utility.yul\":1063:1064   */\n  dup1\n    /* \"#utility.yul\":1056:1068   */\n  revert\n    /* \"#utility.yul\":1007:1009   */\ntag_32:\n    /* \"#utility.yul\":997:1076   */\n  pop\n  jump\t// out\n    /* \"BallotV2.sol\":23:860  contract BallotV2 {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BallotV2.sol\":23:860  contract BallotV2 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x268f1153\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc19d93fb\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BallotV2.sol\":664:858  function changeState(Phase x) public validatePhase(Phase.Regs) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"BallotV2.sol\":286:317  Phase public state = Phase.Init */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV2.sol\":664:858  function changeState(Phase x) public validatePhase(Phase.Regs) {... */\n    tag_8:\n        /* \"BallotV2.sol\":715:725  Phase.Regs */\n      0x01\n        /* \"BallotV2.sol\":379:380  p */\n      dup1\n        /* \"BallotV2.sol\":370:380  state == p */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_14\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_14:\n        /* \"BallotV2.sol\":370:375  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2.sol\":370:380  state == p */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_15\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_15:\n      eq\n        /* \"BallotV2.sol\":362:381  require(state == p) */\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n        /* \"BallotV2.sol\":808:813  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2.sol\":804:813  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_18:\n        /* \"BallotV2.sol\":804:805  x */\n      dup3\n        /* \"BallotV2.sol\":804:813  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_19\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_19:\n      lt\n        /* \"BallotV2.sol\":801:838  if(x < state) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \"BallotV2.sol\":823:831  revert() */\n      0x00\n      dup1\n      revert\n        /* \"BallotV2.sol\":801:838  if(x < state) {... */\n    tag_20:\n        /* \"BallotV2.sol\":852:853  x */\n      dup2\n        /* \"BallotV2.sol\":844:849  state */\n      0x03\n      0x00\n        /* \"BallotV2.sol\":844:853  state = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_21:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV2.sol\":664:858  function changeState(Phase x) public validatePhase(Phase.Regs) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BallotV2.sol\":286:317  Phase public state = Phase.Init */\n    tag_10:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:162   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":99:105   */\n      dup2\n        /* \"#utility.yul\":86:106   */\n      calldataload\n        /* \"#utility.yul\":77:106   */\n      swap1\n      pop\n        /* \"#utility.yul\":115:156   */\n      tag_25\n        /* \"#utility.yul\":150:155   */\n      dup2\n        /* \"#utility.yul\":115:156   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":67:162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":168:446   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":284:286   */\n      0x20\n        /* \"#utility.yul\":272:281   */\n      dup3\n        /* \"#utility.yul\":263:270   */\n      dup5\n        /* \"#utility.yul\":259:282   */\n      sub\n        /* \"#utility.yul\":255:287   */\n      slt\n        /* \"#utility.yul\":252:254   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":300:301   */\n      0x00\n        /* \"#utility.yul\":297:298   */\n      dup1\n        /* \"#utility.yul\":290:302   */\n      revert\n        /* \"#utility.yul\":252:254   */\n    tag_28:\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":368:429   */\n      tag_29\n        /* \"#utility.yul\":421:428   */\n      dup5\n        /* \"#utility.yul\":412:418   */\n      dup3\n        /* \"#utility.yul\":401:410   */\n      dup6\n        /* \"#utility.yul\":397:419   */\n      add\n        /* \"#utility.yul\":368:429   */\n      tag_23\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":358:429   */\n      swap2\n      pop\n        /* \"#utility.yul\":314:439   */\n      pop\n        /* \"#utility.yul\":242:446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":452:595   */\n    tag_30:\n        /* \"#utility.yul\":545:588   */\n      tag_32\n        /* \"#utility.yul\":582:587   */\n      dup2\n        /* \"#utility.yul\":545:588   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":540:543   */\n      dup3\n        /* \"#utility.yul\":533:589   */\n      mstore\n        /* \"#utility.yul\":523:595   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":601:835   */\n    tag_12:\n      0x00\n        /* \"#utility.yul\":738:740   */\n      0x20\n        /* \"#utility.yul\":727:736   */\n      dup3\n        /* \"#utility.yul\":723:741   */\n      add\n        /* \"#utility.yul\":715:741   */\n      swap1\n      pop\n        /* \"#utility.yul\":751:828   */\n      tag_35\n        /* \"#utility.yul\":825:826   */\n      0x00\n        /* \"#utility.yul\":814:823   */\n      dup4\n        /* \"#utility.yul\":810:827   */\n      add\n        /* \"#utility.yul\":801:807   */\n      dup5\n        /* \"#utility.yul\":751:828   */\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":705:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:968   */\n    tag_36:\n      0x00\n        /* \"#utility.yul\":915:920   */\n      dup2\n        /* \"#utility.yul\":904:920   */\n      swap1\n      pop\n        /* \"#utility.yul\":921:962   */\n      tag_38\n        /* \"#utility.yul\":956:961   */\n      dup3\n        /* \"#utility.yul\":921:962   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":894:968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1101   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":1063:1095   */\n      tag_41\n        /* \"#utility.yul\":1089:1094   */\n      dup3\n        /* \"#utility.yul\":1063:1095   */\n      tag_36\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1050:1095   */\n      swap1\n      pop\n        /* \"#utility.yul\":1040:1101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1107:1287   */\n    tag_42:\n        /* \"#utility.yul\":1155:1232   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1152:1153   */\n      0x00\n        /* \"#utility.yul\":1145:1233   */\n      mstore\n        /* \"#utility.yul\":1252:1256   */\n      0x21\n        /* \"#utility.yul\":1249:1250   */\n      0x04\n        /* \"#utility.yul\":1242:1257   */\n      mstore\n        /* \"#utility.yul\":1276:1280   */\n      0x24\n        /* \"#utility.yul\":1273:1274   */\n      0x00\n        /* \"#utility.yul\":1266:1281   */\n      revert\n        /* \"#utility.yul\":1293:1406   */\n    tag_39:\n        /* \"#utility.yul\":1374:1375   */\n      0x04\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1364:1376   */\n      lt\n        /* \"#utility.yul\":1354:1356   */\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1380:1398   */\n      tag_46\n      tag_42\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1354:1356   */\n    tag_45:\n        /* \"#utility.yul\":1344:1406   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1412:1519   */\n    tag_26:\n        /* \"#utility.yul\":1493:1494   */\n      0x04\n        /* \"#utility.yul\":1486:1491   */\n      dup2\n        /* \"#utility.yul\":1483:1495   */\n      lt\n        /* \"#utility.yul\":1473:1475   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1506:1507   */\n      dup1\n        /* \"#utility.yul\":1499:1511   */\n      revert\n        /* \"#utility.yul\":1473:1475   */\n    tag_48:\n        /* \"#utility.yul\":1463:1519   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207bf4d98d1546839794c095a748059970fd4c6be42c590d0aa5b41907d70fd36664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1079:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:284:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "512:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:1",
														"type": ""
													}
												],
												"src": "446:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "572:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "582:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "609:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "591:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "582:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "705:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "707:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "630:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "637:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "627:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:77:1"
															},
															"nodeType": "YulIf",
															"src": "624:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "736:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "747:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "743:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "736:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "558:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "568:3:1",
														"type": ""
													}
												],
												"src": "529:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "910:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "903:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "768:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "997:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1054:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1063:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1066:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1056:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1056:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1056:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1020:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1045:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1027:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1027:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1017:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1017:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:43:1"
															},
															"nodeType": "YulIf",
															"src": "1007:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "990:5:1",
														"type": ""
													}
												],
												"src": "954:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526000600360006101000a81548160ff02191690836003811115610050577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555034801561006157600080fd5b50604051610585380380610585833981810160405281019061008391906101a9565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060005b8181101561018d57600260405180602001604052806000815250908060018154018082558091505060019003906000526020600020016000909190919091506000820151816000015550508080610185906101dc565b91505061012f565b505061026b565b6000815190506101a381610254565b92915050565b6000602082840312156101bb57600080fd5b60006101c984828501610194565b91505092915050565b6000819050919050565b60006101e7826101d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561021a57610219610225565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61025d816101d2565b811461026857600080fd5b50565b61030b8061027a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063268f11531461003b578063c19d93fb14610057575b600080fd5b6100556004803603810190610050919061020a565b610075565b005b61005f6101e2565b60405161006c9190610242565b60405180910390f35b60018060038111156100b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360009054906101000a900460ff1660038111156100f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461010257600080fd5b600360009054906101000a900460ff16600381111561014a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826003811115610183577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b101561018e57600080fd5b81600360006101000a81548160ff021916908360038111156101d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505050565b600360009054906101000a900460ff1681565b600081359050610204816102c5565b92915050565b60006020828403121561021c57600080fd5b600061022a848285016101f5565b91505092915050565b61023c81610270565b82525050565b60006020820190506102576000830184610233565b92915050565b600081905061026b826102b1565b919050565b600061027b8261025d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106102c2576102c1610282565b5b50565b600481106102d257600080fd5b5056fea26469706673582212207bf4d98d1546839794c095a748059970fd4c6be42c590d0aa5b41907d70fd36664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x50 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x585 CODESIZE SUB DUP1 PUSH2 0x585 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x1A9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP DUP1 DUP1 PUSH2 0x185 SWAP1 PUSH2 0x1DC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12F JUMP JUMPDEST POP POP PUSH2 0x26B JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A3 DUP2 PUSH2 0x254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C9 DUP5 DUP3 DUP6 ADD PUSH2 0x194 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7 DUP3 PUSH2 0x1D2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x225 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x25D DUP2 PUSH2 0x1D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30B DUP1 PUSH2 0x27A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x268F1153 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x183 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST LT ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204 DUP2 PUSH2 0x2C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22A DUP5 DUP3 DUP6 ADD PUSH2 0x1F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23C DUP2 PUSH2 0x270 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x257 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x26B DUP3 PUSH2 0x2B1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP3 PUSH2 0x25D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2C2 JUMPI PUSH2 0x2C1 PUSH2 0x282 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xF4D98D1546839794C095A748059970FD4C6BE42C590D0AA5B41907D7 0xF 0xD3 PUSH7 0x64736F6C634300 ADDMOD STOP STOP CALLER ",
							"sourceMap": "23:837:0:-:0;;;307:10;286:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;397:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;455:10;441:11;;:24;;;;;;;;;;;;;;;;;;500:1;471:6;:19;478:11;;;;;;;;;;;471:19;;;;;;;;;;;;;;;:26;;:30;;;;511:9;507:87;531:11;524:4;:18;507:87;;;560:9;575:11;;;;;;;;584:1;575:11;;;560:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:6;;;;;:::i;:::-;;;;507:87;;;;397:201;23:837;;7:143:1;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:77::-;;512:5;501:16;;491:32;;;:::o;529:233::-;;591:24;609:5;591:24;:::i;:::-;582:33;;637:66;630:5;627:77;624:2;;;707:18;;:::i;:::-;624:2;754:1;747:5;743:13;736:20;;572:190;;;:::o;768:180::-;816:77;813:1;806:88;913:4;910:1;903:15;937:4;934:1;927:15;954:122;1027:24;1045:5;1027:24;:::i;:::-;1020:5;1017:35;1007:2;;1066:1;1063;1056:12;1007:2;997:79;:::o;23:837:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1522:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "86:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "150:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Phase_$27",
																	"nodeType": "YulIdentifier",
																	"src": "115:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "115:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "115:41:1"
														}
													]
												},
												"name": "abi_decode_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:1",
														"type": ""
													}
												],
												"src": "7:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "242:204:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "288:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "297:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "290:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "290:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "290:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "263:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "272:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "259:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "284:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "255:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "255:32:1"
															},
															"nodeType": "YulIf",
															"src": "252:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "314:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "329:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "333:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "358:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "401:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "412:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "397:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "397:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "421:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Phase_$27",
																			"nodeType": "YulIdentifier",
																			"src": "368:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "368:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "358:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:1",
														"type": ""
													}
												],
												"src": "168:278:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "523:72:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "540:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "582:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Phase_$27_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "545:36:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:43:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "533:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "533:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "533:56:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "511:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "518:3:1",
														"type": ""
													}
												],
												"src": "452:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "705:130:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "715:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "727:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "723:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "715:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "801:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "814:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "825:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "810:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "810:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "751:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:77:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:77:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Phase_$27__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "689:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "700:4:1",
														"type": ""
													}
												],
												"src": "601:234:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "894:74:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "904:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "915:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "904:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "956:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Phase_$27",
																	"nodeType": "YulIdentifier",
																	"src": "921:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:41:1"
														}
													]
												},
												"name": "cleanup_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "876:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "886:7:1",
														"type": ""
													}
												],
												"src": "841:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:61:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1050:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1089:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Phase_$27",
																	"nodeType": "YulIdentifier",
																	"src": "1063:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1063:32:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1050:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Phase_$27_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1020:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1030:9:1",
														"type": ""
													}
												],
												"src": "974:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1135:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1152:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1155:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1145:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1145:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1145:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1252:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1273:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1266:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1344:62:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1378:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "1380:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1380:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1380:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1367:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1374:1:1",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1364:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1364:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:20:1"
															},
															"nodeType": "YulIf",
															"src": "1354:2:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1337:5:1",
														"type": ""
													}
												],
												"src": "1293:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1463:56:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1497:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1509:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1499:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1499:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1499:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1486:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1493:1:1",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1483:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1483:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1476:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1476:20:1"
															},
															"nodeType": "YulIf",
															"src": "1473:2:1"
														}
													]
												},
												"name": "validator_revert_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1456:5:1",
														"type": ""
													}
												],
												"src": "1412:107:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_enum$_Phase_$27(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Phase_$27(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Phase_$27(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Phase_$27(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Phase_$27_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Phase_$27__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_enum$_Phase_$27(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Phase_$27(value)\n    }\n\n    function convert_t_enum$_Phase_$27_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Phase_$27(value)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Phase_$27(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_enum$_Phase_$27(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063268f11531461003b578063c19d93fb14610057575b600080fd5b6100556004803603810190610050919061020a565b610075565b005b61005f6101e2565b60405161006c9190610242565b60405180910390f35b60018060038111156100b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360009054906101000a900460ff1660038111156100f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461010257600080fd5b600360009054906101000a900460ff16600381111561014a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826003811115610183577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b101561018e57600080fd5b81600360006101000a81548160ff021916908360038111156101d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505050565b600360009054906101000a900460ff1681565b600081359050610204816102c5565b92915050565b60006020828403121561021c57600080fd5b600061022a848285016101f5565b91505092915050565b61023c81610270565b82525050565b60006020820190506102576000830184610233565b92915050565b600081905061026b826102b1565b919050565b600061027b8261025d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106102c2576102c1610282565b5b50565b600481106102d257600080fd5b5056fea26469706673582212207bf4d98d1546839794c095a748059970fd4c6be42c590d0aa5b41907d70fd36664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x268F1153 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x183 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST LT ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204 DUP2 PUSH2 0x2C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22A DUP5 DUP3 DUP6 ADD PUSH2 0x1F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23C DUP2 PUSH2 0x270 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x257 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x26B DUP3 PUSH2 0x2B1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP3 PUSH2 0x25D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2C2 JUMPI PUSH2 0x2C1 PUSH2 0x282 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xF4D98D1546839794C095A748059970FD4C6BE42C590D0AA5B41907D7 0xF 0xD3 PUSH7 0x64736F6C634300 ADDMOD STOP STOP CALLER ",
							"sourceMap": "23:837:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;286:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;664:194;715:10;379:1;370:10;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:10;;;;;;;;;;;;;;;;;362:19;;;;;;808:5:::1;;;;;;;;;;;804:9;;;;;;;;;;;;;;;;:1;:9;;;;;;;;;;;;;;;;;801:37;;;823:8;::::0;::::1;801:37;852:1;844:5;;:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:194:::0;;:::o;286:31::-;;;;;;;;;;;;;:::o;7:155:1:-;;99:6;86:20;77:29;;115:41;150:5;115:41;:::i;:::-;67:95;;;;:::o;168:278::-;;284:2;272:9;263:7;259:23;255:32;252:2;;;300:1;297;290:12;252:2;343:1;368:61;421:7;412:6;401:9;397:22;368:61;:::i;:::-;358:71;;314:125;242:204;;;;:::o;452:143::-;545:43;582:5;545:43;:::i;:::-;540:3;533:56;523:72;;:::o;601:234::-;;738:2;727:9;723:18;715:26;;751:77;825:1;814:9;810:17;801:6;751:77;:::i;:::-;705:130;;;;:::o;841:127::-;;915:5;904:16;;921:41;956:5;921:41;:::i;:::-;894:74;;;:::o;974:127::-;;1063:32;1089:5;1063:32;:::i;:::-;1050:45;;1040:61;;;:::o;1107:180::-;1155:77;1152:1;1145:88;1252:4;1249:1;1242:15;1276:4;1273:1;1266:15;1293:113;1374:1;1367:5;1364:12;1354:2;;1380:18;;:::i;:::-;1354:2;1344:62;:::o;1412:107::-;1493:1;1486:5;1483:12;1473:2;;1509:1;1506;1499:12;1473:2;1463:56;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "155800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changeState(uint8)": "23058",
								"state()": "1260"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23,
									"end": 860,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23,
									"end": 860,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23,
									"end": 860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 307,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 455,
									"end": 465,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 441,
									"end": 452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 452,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 500,
									"end": 501,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 471,
									"end": 477,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 471,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 497,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 511,
									"end": 520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 531,
									"end": 542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 524,
									"end": 528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 524,
									"end": 542,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 560,
									"end": 569,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 584,
									"end": 585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23,
									"end": 860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23,
									"end": 860,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 523,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 446,
									"end": 523,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 446,
									"end": 523,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 501,
									"end": 517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 501,
									"end": 517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 529,
									"end": 762,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 529,
									"end": 762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 529,
									"end": 762,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 609,
									"end": 614,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 591,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 582,
									"end": 615,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 582,
									"end": 615,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 637,
									"end": 703,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 630,
									"end": 635,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 627,
									"end": 704,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 624,
									"end": 626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 707,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 624,
									"end": 626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 754,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 747,
									"end": 752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 743,
									"end": 756,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 736,
									"end": 756,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 736,
									"end": 756,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 816,
									"end": 893,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 813,
									"end": 814,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 913,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 903,
									"end": 918,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 937,
									"end": 941,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 927,
									"end": 942,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1076,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 954,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1045,
									"end": 1050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1025,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1052,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1067,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1064,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1068,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 23,
									"end": 860,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23,
									"end": 860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23,
									"end": 860,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 860,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 860,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23,
									"end": 860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 860,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207bf4d98d1546839794c095a748059970fd4c6be42c590d0aa5b41907d70fd36664736f6c63430008000033",
									".code": [
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "268F1153"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "C19D93FB"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 860,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 664,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 664,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 664,
											"end": 858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 664,
											"end": 858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 664,
											"end": 858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 664,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 664,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 664,
											"end": 858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 664,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 664,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 664,
											"end": 858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 379,
											"end": 380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 808,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 808,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 808,
											"end": 813,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 813,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 808,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 808,
											"end": 813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 804,
											"end": 805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 804,
											"end": 813,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 801,
											"end": 838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 801,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 823,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 823,
											"end": 831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 801,
											"end": 838,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 844,
											"end": 849,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 844,
											"end": 849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 844,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 858,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 86,
											"end": 106,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 150,
											"end": 155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 67,
											"end": 162,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 67,
											"end": 162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 67,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 67,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 67,
											"end": 162,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 168,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 272,
											"end": 281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 263,
											"end": 270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 259,
											"end": 282,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 255,
											"end": 287,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 252,
											"end": 254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 252,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 252,
											"end": 254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 300,
											"end": 301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 302,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 252,
											"end": 254,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 252,
											"end": 254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 421,
											"end": 428,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 412,
											"end": 418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 401,
											"end": 410,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 397,
											"end": 419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 368,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 368,
											"end": 429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 368,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 368,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 314,
											"end": 439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 242,
											"end": 446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 242,
											"end": 446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 242,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 242,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 242,
											"end": 446,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 452,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 452,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 582,
											"end": 587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 545,
											"end": 588,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 545,
											"end": 588,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 545,
											"end": 588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 540,
											"end": 543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 533,
											"end": 589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 523,
											"end": 595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 601,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 601,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 601,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 727,
											"end": 736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 723,
											"end": 741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 715,
											"end": 741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 751,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 825,
											"end": 826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 823,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 810,
											"end": 827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 801,
											"end": 807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 751,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 751,
											"end": 828,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 751,
											"end": 828,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 751,
											"end": 828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 705,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 705,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 705,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 705,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 705,
											"end": 835,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 968,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 841,
											"end": 968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 841,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 904,
											"end": 920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 904,
											"end": 920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 921,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 956,
											"end": 961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 921,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 921,
											"end": 962,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 921,
											"end": 962,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 921,
											"end": 962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 894,
											"end": 968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 894,
											"end": 968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 894,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 894,
											"end": 968,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 974,
											"end": 1101,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 974,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1063,
											"end": 1095,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1095,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1063,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1101,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1107,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1107,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1232,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1152,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1249,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1280,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1273,
											"end": 1274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1281,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1406,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1293,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1375,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1376,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1354,
											"end": 1356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1380,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1380,
											"end": 1398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1380,
											"end": 1398,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1380,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1356,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1354,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1406,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1412,
											"end": 1519,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1412,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1494,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1486,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1495,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1511,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1519,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeState(uint8)": "268f1153",
							"state()": "c19d93fb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numProposal\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum BallotV2.Phase\",\"name\":\"x\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum BallotV2.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BallotV2.sol\":\"BallotV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BallotV2.sol\":{\"keccak256\":\"0x8f45d25d6a83c626ab146d5302bef1af9c01cb9aa11047dca5c5dcaf4d92a5ba\",\"urls\":[\"bzz-raw://88e7a05da819b552ae33af82fbf536c104b2080a9a32811ffdf092652849da49\",\"dweb:/ipfs/QmXYyMu8DU82enE3fckC9Y8v98onLcZanHvSNXeFTUTPYv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "BallotV2.sol:BallotV2",
								"label": "chariperson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 18,
								"contract": "BallotV2.sol:BallotV2",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)8_storage)"
							},
							{
								"astId": 22,
								"contract": "BallotV2.sol:BallotV2",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)11_storage)dyn_storage"
							},
							{
								"astId": 32,
								"contract": "BallotV2.sol:BallotV2",
								"label": "state",
								"offset": 0,
								"slot": "3",
								"type": "t_enum(Phase)27"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)11_storage)dyn_storage": {
								"base": "t_struct(Proposal)11_storage",
								"encoding": "dynamic_array",
								"label": "struct BallotV2.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(Phase)27": {
								"encoding": "inplace",
								"label": "enum BallotV2.Phase",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Voter)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct BallotV2.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)8_storage"
							},
							"t_struct(Proposal)11_storage": {
								"encoding": "inplace",
								"label": "struct BallotV2.Proposal",
								"members": [
									{
										"astId": 10,
										"contract": "BallotV2.sol:BallotV2",
										"label": "voteCount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Voter)8_storage": {
								"encoding": "inplace",
								"label": "struct BallotV2.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "BallotV2.sol:BallotV2",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "BallotV2.sol:BallotV2",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 7,
										"contract": "BallotV2.sol:BallotV2",
										"label": "vote",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BallotV2.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BallotV2.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> BallotV2.sol:27:3:\n   |\n27 |   constructor (uint numProposal) public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 598,
					"file": "BallotV2.sol",
					"start": 397
				},
				"type": "Warning"
			}
		],
		"sources": {
			"BallotV2.sol": {
				"ast": {
					"absolutePath": "BallotV2.sol",
					"exportedSymbols": {
						"BallotV2": [
							107
						]
					},
					"id": 108,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 107,
							"linearizedBaseContracts": [
								107
							],
							"name": "BallotV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "BallotV2.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "65:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "65:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "82:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "82:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "98:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "98:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 107,
									"src": "46:66:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BallotV2.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "138:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "138:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 107,
									"src": "116:41:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "chariperson",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "161:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "161:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "184:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct BallotV2.Voter)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "192:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "184:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct BallotV2.Voter)"
										},
										"valueType": {
											"id": 16,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 15,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "203:5:0"
											},
											"referencedDeclaration": 8,
											"src": "203:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct BallotV2.Voter"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "220:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct BallotV2.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 20,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 19,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "220:8:0"
											},
											"referencedDeclaration": 11,
											"src": "220:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct BallotV2.Proposal"
											}
										},
										"id": 21,
										"nodeType": "ArrayTypeName",
										"src": "220:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct BallotV2.Proposal[]"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "BallotV2.Phase",
									"id": 27,
									"members": [
										{
											"id": 23,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "258:4:0"
										},
										{
											"id": 24,
											"name": "Regs",
											"nodeType": "EnumValue",
											"src": "264:4:0"
										},
										{
											"id": 25,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "270:4:0"
										},
										{
											"id": 26,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "276:4:0"
										}
									],
									"name": "Phase",
									"nodeType": "EnumDefinition",
									"src": "245:37:0"
								},
								{
									"constant": false,
									"functionSelector": "c19d93fb",
									"id": 32,
									"mutability": "mutable",
									"name": "state",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "286:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Phase_$27",
										"typeString": "enum BallotV2.Phase"
									},
									"typeName": {
										"id": 29,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 28,
											"name": "Phase",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 27,
											"src": "286:5:0"
										},
										"referencedDeclaration": 27,
										"src": "286:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$27",
											"typeString": "enum BallotV2.Phase"
										}
									},
									"value": {
										"expression": {
											"id": 30,
											"name": "Phase",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 27,
											"src": "307:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Phase_$27_$",
												"typeString": "type(enum BallotV2.Phase)"
											}
										},
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"src": "307:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$27",
											"typeString": "enum BallotV2.Phase"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "356:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Phase_$27",
																"typeString": "enum BallotV2.Phase"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 38,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "370:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$27",
																	"typeString": "enum BallotV2.Phase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 39,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "379:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$27",
																	"typeString": "enum BallotV2.Phase"
																}
															},
															"src": "370:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "362:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "362:19:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "387:1:0"
											}
										]
									},
									"id": 45,
									"name": "validatePhase",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "p",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "347:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$27",
													"typeString": "enum BallotV2.Phase"
												},
												"typeName": {
													"id": 34,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 33,
														"name": "Phase",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "347:5:0"
													},
													"referencedDeclaration": 27,
													"src": "347:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:9:0"
									},
									"src": "324:69:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "435:163:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "chariperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "441:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 51,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "455:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "455:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "441:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "441:24:0"
											},
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 55,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "471:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV2.Voter storage ref)"
																}
															},
															"id": 57,
															"indexExpression": {
																"id": 56,
																"name": "chariperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "478:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "471:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV2.Voter storage ref"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "471:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "471:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "471:30:0"
											},
											{
												"body": {
													"id": 80,
													"nodeType": "Block",
													"src": "552:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "584:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 75,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "575:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$11_storage_ptr_$",
																				"typeString": "type(struct BallotV2.Proposal storage pointer)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "575:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$11_memory_ptr",
																			"typeString": "struct BallotV2.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$11_memory_ptr",
																			"typeString": "struct BallotV2.Proposal memory"
																		}
																	],
																	"expression": {
																		"id": 72,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "560:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																			"typeString": "struct BallotV2.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "560:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$11_storage_$returns$__$",
																		"typeString": "function (struct BallotV2.Proposal storage ref)"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "560:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 79,
															"nodeType": "ExpressionStatement",
															"src": "560:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "524:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 67,
														"name": "numProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "524:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 81,
												"initializationExpression": {
													"assignments": [
														63
													],
													"declarations": [
														{
															"constant": false,
															"id": 63,
															"mutability": "mutable",
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 81,
															"src": "511:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 62,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "511:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 65,
													"initialValue": {
														"hexValue": "30",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "521:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "511:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "544:6:0",
														"subExpression": {
															"id": 69,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "544:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 71,
													"nodeType": "ExpressionStatement",
													"src": "544:6:0"
												},
												"nodeType": "ForStatement",
												"src": "507:87:0"
											}
										]
									},
									"id": 83,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "numProposal",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "410:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:18:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:0:0"
									},
									"scope": 107,
									"src": "397:201:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "727:131:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 93,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "804:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 94,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "808:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"src": "804:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 100,
												"nodeType": "IfStatement",
												"src": "801:37:0",
												"trueBody": {
													"id": 99,
													"nodeType": "Block",
													"src": "815:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 96,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "823:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "823:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 98,
															"nodeType": "ExpressionStatement",
															"src": "823:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "844:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "852:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"src": "844:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "844:9:0"
											}
										]
									},
									"functionSelector": "268f1153",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 89,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "715:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$27_$",
															"typeString": "type(enum BallotV2.Phase)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Regs",
													"nodeType": "MemberAccess",
													"src": "715:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												}
											],
											"id": 91,
											"modifierName": {
												"id": 88,
												"name": "validatePhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "701:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "701:25:0"
										}
									],
									"name": "changeState",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "685:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$27",
													"typeString": "enum BallotV2.Phase"
												},
												"typeName": {
													"id": 85,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 84,
														"name": "Phase",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "685:5:0"
													},
													"referencedDeclaration": 27,
													"src": "685:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:9:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:0:0"
									},
									"scope": 107,
									"src": "664:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 108,
							"src": "23:837:0"
						}
					],
					"src": "0:860:0"
				},
				"id": 0
			}
		}
	}
}