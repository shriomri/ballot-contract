{
	"id": "d5bf9636bceb44a796879ab20d585beb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"BallotV2.sol": {
				"content": "pragma solidity 0.8.0;\ncontract BallotV2 {\n\n  struct Voter {\n    uint weight;\n    bool voted;\n    uint vote;\n  }\n\n  struct Proposal {\n    uint voteCount;\n  }\n\n  address chariperson;\n  mapping(address => Voter) voters;\n  Proposal[] proposals;\n\n  enum Phase { Init, Regs, Vote, Done }\n\n  Phase public state = Phase.Init;\n  \n  modifier validatePhase(Phase p) {\n    require(state == p);\n    _;\n  }\n\n  constructor (uint numProposal) public {\n    chariperson = msg.sender;\n    voters[chariperson].weight = 2;\n    for(uint prop=0; prop < numProposal; prop++) {\n      proposals.push(Proposal(0));\n    }\n  }\n\n  //function to change state, can be only done by chariperson\n  function changeState(Phase x) public {\n    if(msg.sender != chariperson) {\n      revert();\n    }\n\n    if(x < state) {\n      revert();\n    }\n\n    state = x;\n  }\n\n  function register(address voter) public validatePhase(Phase.Regs) {\n    if (msg.sender != chariperson || voters[voter].voted) return;\n    voters[voter].weight = 1;\n    voters[voter].voted = false;\n  }\n\n  function vote(uint toProposal) public validatePhase(Phase.Vote) {\n    Voter memory sender = voters[msg.sender];\n    if (sender.voted || toProposal > proposals.length) revert();\n\n    sender.voted = true;\n    sender.vote  = toProposal;\n    proposals[toProposal].voteCount += sender.weight;\n  }\n\n  function reqWinner() public validatePhase(Phase.Done) view returns (uint winningProposal) {\n    uint winningVoteCount = 0;\n    for (uint prop = 0; prop < proposals.length; prop++)\n      if (proposals[prop].voteCount > winningVoteCount) {\n          winningVoteCount = proposals[prop].voteCount;\n          winningProposal = prop;\n      }\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BallotV2.sol": {
				"BallotV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numProposal",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "enum BallotV2.Phase",
									"name": "x",
									"type": "uint8"
								}
							],
							"name": "changeState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reqWinner",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "state",
							"outputs": [
								{
									"internalType": "enum BallotV2.Phase",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "toProposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BallotV2.sol\":23:1667  contract BallotV2 {... */\n  mstore(0x40, 0x80)\n    /* \"BallotV2.sol\":307:317  Phase.Init */\n  0x00\n    /* \"BallotV2.sol\":286:317  Phase public state = Phase.Init */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x21)\n  revert(0x00, 0x24)\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV2.sol\":397:598  constructor (uint numProposal) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"BallotV2.sol\":455:465  msg.sender */\n  caller\n    /* \"BallotV2.sol\":441:452  chariperson */\n  0x00\n  dup1\n    /* \"BallotV2.sol\":441:465  chariperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV2.sol\":500:501  2 */\n  0x02\n    /* \"BallotV2.sol\":471:477  voters */\n  0x01\n    /* \"BallotV2.sol\":471:490  voters[chariperson] */\n  0x00\n    /* \"BallotV2.sol\":478:489  chariperson */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BallotV2.sol\":471:490  voters[chariperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BallotV2.sol\":471:497  voters[chariperson].weight */\n  0x00\n  add\n    /* \"BallotV2.sol\":471:501  voters[chariperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotV2.sol\":511:520  uint prop */\n  0x00\n    /* \"BallotV2.sol\":507:594  for(uint prop=0; prop < numProposal; prop++) {... */\ntag_7:\n    /* \"BallotV2.sol\":531:542  numProposal */\n  dup2\n    /* \"BallotV2.sol\":524:528  prop */\n  dup2\n    /* \"BallotV2.sol\":524:542  prop < numProposal */\n  lt\n    /* \"BallotV2.sol\":507:594  for(uint prop=0; prop < numProposal; prop++) {... */\n  iszero\n  tag_8\n  jumpi\n    /* \"BallotV2.sol\":560:569  proposals */\n  0x02\n    /* \"BallotV2.sol\":575:586  Proposal(0) */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n    /* \"BallotV2.sol\":584:585  0 */\n  0x00\n    /* \"BallotV2.sol\":575:586  Proposal(0) */\n  dup2\n  mstore\n  pop\n    /* \"BallotV2.sol\":560:587  proposals.push(Proposal(0)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  pop\n  pop\n    /* \"BallotV2.sol\":544:550  prop++ */\n  dup1\n  dup1\n  tag_11\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  swap2\n  pop\n  pop\n    /* \"BallotV2.sol\":507:594  for(uint prop=0; prop < numProposal; prop++) {... */\n  jump(tag_7)\ntag_8:\n  pop\n    /* \"BallotV2.sol\":397:598  constructor (uint numProposal) public {... */\n  pop\n    /* \"BallotV2.sol\":23:1667  contract BallotV2 {... */\n  jump(tag_13)\n    /* \"#utility.yul\":7:150   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_17\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_4:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_20:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_21\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:523   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":512:517   */\n  dup2\n    /* \"#utility.yul\":501:517   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:523   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":529:762   */\ntag_12:\n  0x00\n    /* \"#utility.yul\":591:615   */\n  tag_25\n    /* \"#utility.yul\":609:614   */\n  dup3\n    /* \"#utility.yul\":591:615   */\n  tag_22\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":582:615   */\n  swap2\n  pop\n    /* \"#utility.yul\":637:703   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":630:635   */\n  dup3\n    /* \"#utility.yul\":627:704   */\n  eq\n    /* \"#utility.yul\":624:626   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":707:725   */\n  tag_27\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":624:626   */\ntag_26:\n    /* \"#utility.yul\":754:755   */\n  0x01\n    /* \"#utility.yul\":747:752   */\n  dup3\n    /* \"#utility.yul\":743:756   */\n  add\n    /* \"#utility.yul\":736:756   */\n  swap1\n  pop\n    /* \"#utility.yul\":572:762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":768:948   */\ntag_28:\n    /* \"#utility.yul\":816:893   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":813:814   */\n  0x00\n    /* \"#utility.yul\":806:894   */\n  mstore\n    /* \"#utility.yul\":913:917   */\n  0x11\n    /* \"#utility.yul\":910:911   */\n  0x04\n    /* \"#utility.yul\":903:918   */\n  mstore\n    /* \"#utility.yul\":937:941   */\n  0x24\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":927:942   */\n  revert\n    /* \"#utility.yul\":954:1076   */\ntag_18:\n    /* \"#utility.yul\":1027:1051   */\n  tag_31\n    /* \"#utility.yul\":1045:1050   */\n  dup2\n    /* \"#utility.yul\":1027:1051   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1020:1025   */\n  dup2\n    /* \"#utility.yul\":1017:1052   */\n  eq\n    /* \"#utility.yul\":1007:1009   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1066:1067   */\n  0x00\n    /* \"#utility.yul\":1063:1064   */\n  dup1\n    /* \"#utility.yul\":1056:1068   */\n  revert\n    /* \"#utility.yul\":1007:1009   */\ntag_32:\n    /* \"#utility.yul\":997:1076   */\n  pop\n  jump\t// out\n    /* \"BallotV2.sol\":23:1667  contract BallotV2 {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BallotV2.sol\":23:1667  contract BallotV2 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x268f1153\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4420e486\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x508b30c9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc19d93fb\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BallotV2.sol\":1031:1322  function vote(uint toProposal) public validatePhase(Phase.Vote) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"BallotV2.sol\":664:823  function changeState(Phase x) public {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"BallotV2.sol\":827:1027  function register(address voter) public validatePhase(Phase.Regs) {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"BallotV2.sol\":1326:1665  function reqWinner() public validatePhase(Phase.Done) view returns (uint winningProposal) {... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV2.sol\":286:317  Phase public state = Phase.Init */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV2.sol\":1031:1322  function vote(uint toProposal) public validatePhase(Phase.Vote) {... */\n    tag_11:\n        /* \"BallotV2.sol\":1083:1093  Phase.Vote */\n      0x02\n        /* \"BallotV2.sol\":379:380  p */\n      dup1\n        /* \"BallotV2.sol\":370:380  state == p */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_29:\n        /* \"BallotV2.sol\":370:375  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2.sol\":370:380  state == p */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_30:\n      eq\n        /* \"BallotV2.sol\":362:381  require(state == p) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"BallotV2.sol\":1101:1120  Voter memory sender */\n      0x00\n        /* \"BallotV2.sol\":1123:1129  voters */\n      0x01\n        /* \"BallotV2.sol\":1123:1141  voters[msg.sender] */\n      0x00\n        /* \"BallotV2.sol\":1130:1140  msg.sender */\n      caller\n        /* \"BallotV2.sol\":1123:1141  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV2.sol\":1101:1141  Voter memory sender = voters[msg.sender] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"BallotV2.sol\":1151:1157  sender */\n      dup1\n        /* \"BallotV2.sol\":1151:1163  sender.voted */\n      0x20\n      add\n      mload\n        /* \"BallotV2.sol\":1151:1196  sender.voted || toProposal > proposals.length */\n      dup1\n      tag_33\n      jumpi\n      pop\n        /* \"BallotV2.sol\":1180:1189  proposals */\n      0x02\n        /* \"BallotV2.sol\":1180:1196  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV2.sol\":1167:1177  toProposal */\n      dup4\n        /* \"BallotV2.sol\":1167:1196  toProposal > proposals.length */\n      gt\n        /* \"BallotV2.sol\":1151:1196  sender.voted || toProposal > proposals.length */\n    tag_33:\n        /* \"BallotV2.sol\":1147:1206  if (sender.voted || toProposal > proposals.length) revert() */\n      iszero\n      tag_34\n      jumpi\n        /* \"BallotV2.sol\":1198:1206  revert() */\n      0x00\n      dup1\n      revert\n        /* \"BallotV2.sol\":1147:1206  if (sender.voted || toProposal > proposals.length) revert() */\n    tag_34:\n        /* \"BallotV2.sol\":1228:1232  true */\n      0x01\n        /* \"BallotV2.sol\":1213:1219  sender */\n      dup2\n        /* \"BallotV2.sol\":1213:1225  sender.voted */\n      0x20\n      add\n        /* \"BallotV2.sol\":1213:1232  sender.voted = true */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"BallotV2.sol\":1253:1263  toProposal */\n      dup3\n        /* \"BallotV2.sol\":1238:1244  sender */\n      dup2\n        /* \"BallotV2.sol\":1238:1249  sender.vote */\n      0x40\n      add\n        /* \"BallotV2.sol\":1238:1263  sender.vote  = toProposal */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"BallotV2.sol\":1304:1310  sender */\n      dup1\n        /* \"BallotV2.sol\":1304:1317  sender.weight */\n      0x00\n      add\n      mload\n        /* \"BallotV2.sol\":1269:1278  proposals */\n      0x02\n        /* \"BallotV2.sol\":1279:1289  toProposal */\n      dup5\n        /* \"BallotV2.sol\":1269:1290  proposals[toProposal] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_35\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_35:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV2.sol\":1269:1300  proposals[toProposal].voteCount */\n      0x00\n      add\n      0x00\n        /* \"BallotV2.sol\":1269:1317  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV2.sol\":387:388  _ */\n      pop\n        /* \"BallotV2.sol\":1031:1322  function vote(uint toProposal) public validatePhase(Phase.Vote) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BallotV2.sol\":664:823  function changeState(Phase x) public {... */\n    tag_15:\n        /* \"BallotV2.sol\":724:735  chariperson */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV2.sol\":710:735  msg.sender != chariperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV2.sol\":710:720  msg.sender */\n      caller\n        /* \"BallotV2.sol\":710:735  msg.sender != chariperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BallotV2.sol\":707:760  if(msg.sender != chariperson) {... */\n      tag_40\n      jumpi\n        /* \"BallotV2.sol\":745:753  revert() */\n      0x00\n      dup1\n      revert\n        /* \"BallotV2.sol\":707:760  if(msg.sender != chariperson) {... */\n    tag_40:\n        /* \"BallotV2.sol\":773:778  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2.sol\":769:778  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_41:\n        /* \"BallotV2.sol\":769:770  x */\n      dup2\n        /* \"BallotV2.sol\":769:778  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_42:\n      lt\n        /* \"BallotV2.sol\":766:803  if(x < state) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"BallotV2.sol\":788:796  revert() */\n      0x00\n      dup1\n      revert\n        /* \"BallotV2.sol\":766:803  if(x < state) {... */\n    tag_43:\n        /* \"BallotV2.sol\":817:818  x */\n      dup1\n        /* \"BallotV2.sol\":809:814  state */\n      0x03\n      0x00\n        /* \"BallotV2.sol\":809:818  state = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_44:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV2.sol\":664:823  function changeState(Phase x) public {... */\n      pop\n      jump\t// out\n        /* \"BallotV2.sol\":827:1027  function register(address voter) public validatePhase(Phase.Regs) {... */\n    tag_19:\n        /* \"BallotV2.sol\":881:891  Phase.Regs */\n      0x01\n        /* \"BallotV2.sol\":379:380  p */\n      dup1\n        /* \"BallotV2.sol\":370:380  state == p */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_46\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_46:\n        /* \"BallotV2.sol\":370:375  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2.sol\":370:380  state == p */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_47\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_47:\n      eq\n        /* \"BallotV2.sol\":362:381  require(state == p) */\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n        /* \"BallotV2.sol\":917:928  chariperson */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV2.sol\":903:928  msg.sender != chariperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV2.sol\":903:913  msg.sender */\n      caller\n        /* \"BallotV2.sol\":903:928  msg.sender != chariperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BallotV2.sol\":903:951  msg.sender != chariperson || voters[voter].voted */\n      dup1\n      tag_50\n      jumpi\n      pop\n        /* \"BallotV2.sol\":932:938  voters */\n      0x01\n        /* \"BallotV2.sol\":932:945  voters[voter] */\n      0x00\n        /* \"BallotV2.sol\":939:944  voter */\n      dup4\n        /* \"BallotV2.sol\":932:945  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV2.sol\":932:951  voters[voter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2.sol\":903:951  msg.sender != chariperson || voters[voter].voted */\n    tag_50:\n        /* \"BallotV2.sol\":899:960  if (msg.sender != chariperson || voters[voter].voted) return; */\n      iszero\n      tag_51\n      jumpi\n        /* \"BallotV2.sol\":953:960  return; */\n      jump(tag_49)\n        /* \"BallotV2.sol\":899:960  if (msg.sender != chariperson || voters[voter].voted) return; */\n    tag_51:\n        /* \"BallotV2.sol\":988:989  1 */\n      0x01\n        /* \"BallotV2.sol\":965:971  voters */\n      dup1\n        /* \"BallotV2.sol\":965:978  voters[voter] */\n      0x00\n        /* \"BallotV2.sol\":972:977  voter */\n      dup5\n        /* \"BallotV2.sol\":965:978  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV2.sol\":965:985  voters[voter].weight */\n      0x00\n      add\n        /* \"BallotV2.sol\":965:989  voters[voter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV2.sol\":1017:1022  false */\n      0x00\n        /* \"BallotV2.sol\":995:1001  voters */\n      0x01\n        /* \"BallotV2.sol\":995:1008  voters[voter] */\n      0x00\n        /* \"BallotV2.sol\":1002:1007  voter */\n      dup5\n        /* \"BallotV2.sol\":995:1008  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV2.sol\":995:1014  voters[voter].voted */\n      0x01\n      add\n      0x00\n        /* \"BallotV2.sol\":995:1022  voters[voter].voted = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV2.sol\":387:388  _ */\n    tag_49:\n        /* \"BallotV2.sol\":827:1027  function register(address voter) public validatePhase(Phase.Regs) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BallotV2.sol\":1326:1665  function reqWinner() public validatePhase(Phase.Done) view returns (uint winningProposal) {... */\n    tag_21:\n        /* \"BallotV2.sol\":1394:1414  uint winningProposal */\n      0x00\n        /* \"BallotV2.sol\":1368:1378  Phase.Done */\n      0x03\n        /* \"BallotV2.sol\":379:380  p */\n      dup1\n        /* \"BallotV2.sol\":370:380  state == p */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_53\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_53:\n        /* \"BallotV2.sol\":370:375  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2.sol\":370:380  state == p */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_54\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_54:\n      eq\n        /* \"BallotV2.sol\":362:381  require(state == p) */\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n        /* \"BallotV2.sol\":1422:1443  uint winningVoteCount */\n      0x00\n        /* \"BallotV2.sol\":1458:1467  uint prop */\n      dup1\n        /* \"BallotV2.sol\":1453:1661  for (uint prop = 0; prop < proposals.length; prop++)... */\n    tag_57:\n        /* \"BallotV2.sol\":1480:1489  proposals */\n      0x02\n        /* \"BallotV2.sol\":1480:1496  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV2.sol\":1473:1477  prop */\n      dup2\n        /* \"BallotV2.sol\":1473:1496  prop < proposals.length */\n      lt\n        /* \"BallotV2.sol\":1453:1661  for (uint prop = 0; prop < proposals.length; prop++)... */\n      iszero\n      tag_58\n      jumpi\n        /* \"BallotV2.sol\":1544:1560  winningVoteCount */\n      dup2\n        /* \"BallotV2.sol\":1516:1525  proposals */\n      0x02\n        /* \"BallotV2.sol\":1526:1530  prop */\n      dup3\n        /* \"BallotV2.sol\":1516:1531  proposals[prop] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_60\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_60:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV2.sol\":1516:1541  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV2.sol\":1516:1560  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"BallotV2.sol\":1512:1661  if (proposals[prop].voteCount > winningVoteCount) {... */\n      iszero\n      tag_62\n      jumpi\n        /* \"BallotV2.sol\":1593:1602  proposals */\n      0x02\n        /* \"BallotV2.sol\":1603:1607  prop */\n      dup2\n        /* \"BallotV2.sol\":1593:1608  proposals[prop] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_63\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_63:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV2.sol\":1593:1618  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV2.sol\":1574:1618  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"BallotV2.sol\":1648:1652  prop */\n      dup1\n        /* \"BallotV2.sol\":1630:1652  winningProposal = prop */\n      swap4\n      pop\n        /* \"BallotV2.sol\":1512:1661  if (proposals[prop].voteCount > winningVoteCount) {... */\n    tag_62:\n        /* \"BallotV2.sol\":1498:1504  prop++ */\n      dup1\n      dup1\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      swap2\n      pop\n      pop\n        /* \"BallotV2.sol\":1453:1661  for (uint prop = 0; prop < proposals.length; prop++)... */\n      jump(tag_57)\n    tag_58:\n      pop\n        /* \"BallotV2.sol\":387:388  _ */\n      pop\n        /* \"BallotV2.sol\":1326:1665  function reqWinner() public validatePhase(Phase.Done) view returns (uint winningProposal) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"BallotV2.sol\":286:317  Phase public state = Phase.Init */\n    tag_25:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_68:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_70\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:307   */\n    tag_72:\n      0x00\n        /* \"#utility.yul\":244:250   */\n      dup2\n        /* \"#utility.yul\":231:251   */\n      calldataload\n        /* \"#utility.yul\":222:251   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:301   */\n      tag_74\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":260:301   */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":212:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:452   */\n    tag_76:\n      0x00\n        /* \"#utility.yul\":397:403   */\n      dup2\n        /* \"#utility.yul\":384:404   */\n      calldataload\n        /* \"#utility.yul\":375:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":413:446   */\n      tag_78\n        /* \"#utility.yul\":440:445   */\n      dup2\n        /* \"#utility.yul\":413:446   */\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":365:452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":458:720   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":566:568   */\n      0x20\n        /* \"#utility.yul\":554:563   */\n      dup3\n        /* \"#utility.yul\":545:552   */\n      dup5\n        /* \"#utility.yul\":541:564   */\n      sub\n        /* \"#utility.yul\":537:569   */\n      slt\n        /* \"#utility.yul\":534:536   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":582:583   */\n      0x00\n        /* \"#utility.yul\":579:580   */\n      dup1\n        /* \"#utility.yul\":572:584   */\n      revert\n        /* \"#utility.yul\":534:536   */\n    tag_81:\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":650:703   */\n      tag_82\n        /* \"#utility.yul\":695:702   */\n      dup5\n        /* \"#utility.yul\":686:692   */\n      dup3\n        /* \"#utility.yul\":675:684   */\n      dup6\n        /* \"#utility.yul\":671:693   */\n      add\n        /* \"#utility.yul\":650:703   */\n      tag_68\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":640:703   */\n      swap2\n      pop\n        /* \"#utility.yul\":596:713   */\n      pop\n        /* \"#utility.yul\":524:720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":726:1004   */\n    tag_14:\n      0x00\n        /* \"#utility.yul\":842:844   */\n      0x20\n        /* \"#utility.yul\":830:839   */\n      dup3\n        /* \"#utility.yul\":821:828   */\n      dup5\n        /* \"#utility.yul\":817:840   */\n      sub\n        /* \"#utility.yul\":813:845   */\n      slt\n        /* \"#utility.yul\":810:812   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":858:859   */\n      0x00\n        /* \"#utility.yul\":855:856   */\n      dup1\n        /* \"#utility.yul\":848:860   */\n      revert\n        /* \"#utility.yul\":810:812   */\n    tag_84:\n        /* \"#utility.yul\":901:902   */\n      0x00\n        /* \"#utility.yul\":926:987   */\n      tag_85\n        /* \"#utility.yul\":979:986   */\n      dup5\n        /* \"#utility.yul\":970:976   */\n      dup3\n        /* \"#utility.yul\":959:968   */\n      dup6\n        /* \"#utility.yul\":955:977   */\n      add\n        /* \"#utility.yul\":926:987   */\n      tag_72\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":916:987   */\n      swap2\n      pop\n        /* \"#utility.yul\":872:997   */\n      pop\n        /* \"#utility.yul\":800:1004   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1010:1272   */\n    tag_10:\n      0x00\n        /* \"#utility.yul\":1118:1120   */\n      0x20\n        /* \"#utility.yul\":1106:1115   */\n      dup3\n        /* \"#utility.yul\":1097:1104   */\n      dup5\n        /* \"#utility.yul\":1093:1116   */\n      sub\n        /* \"#utility.yul\":1089:1121   */\n      slt\n        /* \"#utility.yul\":1086:1088   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":1134:1135   */\n      0x00\n        /* \"#utility.yul\":1131:1132   */\n      dup1\n        /* \"#utility.yul\":1124:1136   */\n      revert\n        /* \"#utility.yul\":1086:1088   */\n    tag_87:\n        /* \"#utility.yul\":1177:1178   */\n      0x00\n        /* \"#utility.yul\":1202:1255   */\n      tag_88\n        /* \"#utility.yul\":1247:1254   */\n      dup5\n        /* \"#utility.yul\":1238:1244   */\n      dup3\n        /* \"#utility.yul\":1227:1236   */\n      dup6\n        /* \"#utility.yul\":1223:1245   */\n      add\n        /* \"#utility.yul\":1202:1255   */\n      tag_76\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1192:1255   */\n      swap2\n      pop\n        /* \"#utility.yul\":1148:1265   */\n      pop\n        /* \"#utility.yul\":1076:1272   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1278:1421   */\n    tag_89:\n        /* \"#utility.yul\":1371:1414   */\n      tag_91\n        /* \"#utility.yul\":1408:1413   */\n      dup2\n        /* \"#utility.yul\":1371:1414   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1366:1369   */\n      dup3\n        /* \"#utility.yul\":1359:1415   */\n      mstore\n        /* \"#utility.yul\":1349:1421   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1427:1545   */\n    tag_93:\n        /* \"#utility.yul\":1514:1538   */\n      tag_95\n        /* \"#utility.yul\":1532:1537   */\n      dup2\n        /* \"#utility.yul\":1514:1538   */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1509:1512   */\n      dup3\n        /* \"#utility.yul\":1502:1539   */\n      mstore\n        /* \"#utility.yul\":1492:1545   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1551:1785   */\n    tag_27:\n      0x00\n        /* \"#utility.yul\":1688:1690   */\n      0x20\n        /* \"#utility.yul\":1677:1686   */\n      dup3\n        /* \"#utility.yul\":1673:1691   */\n      add\n        /* \"#utility.yul\":1665:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1778   */\n      tag_98\n        /* \"#utility.yul\":1775:1776   */\n      0x00\n        /* \"#utility.yul\":1764:1773   */\n      dup4\n        /* \"#utility.yul\":1760:1777   */\n      add\n        /* \"#utility.yul\":1751:1757   */\n      dup5\n        /* \"#utility.yul\":1701:1778   */\n      tag_89\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1655:1785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1791:2013   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":1922:1924   */\n      0x20\n        /* \"#utility.yul\":1911:1920   */\n      dup3\n        /* \"#utility.yul\":1907:1925   */\n      add\n        /* \"#utility.yul\":1899:1925   */\n      swap1\n      pop\n        /* \"#utility.yul\":1935:2006   */\n      tag_100\n        /* \"#utility.yul\":2003:2004   */\n      0x00\n        /* \"#utility.yul\":1992:2001   */\n      dup4\n        /* \"#utility.yul\":1988:2005   */\n      add\n        /* \"#utility.yul\":1979:1985   */\n      dup5\n        /* \"#utility.yul\":1935:2006   */\n      tag_93\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1889:2013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2324   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":2078:2098   */\n      tag_102\n        /* \"#utility.yul\":2096:2097   */\n      dup3\n        /* \"#utility.yul\":2078:2098   */\n      tag_96\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2073:2098   */\n      swap2\n      pop\n        /* \"#utility.yul\":2112:2132   */\n      tag_103\n        /* \"#utility.yul\":2130:2131   */\n      dup4\n        /* \"#utility.yul\":2112:2132   */\n      tag_96\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2107:2132   */\n      swap3\n      pop\n        /* \"#utility.yul\":2266:2267   */\n      dup3\n        /* \"#utility.yul\":2198:2264   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2194:2268   */\n      sub\n        /* \"#utility.yul\":2191:2192   */\n      dup3\n        /* \"#utility.yul\":2188:2269   */\n      gt\n        /* \"#utility.yul\":2185:2187   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2272:2290   */\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2185:2187   */\n    tag_104:\n        /* \"#utility.yul\":2316:2317   */\n      dup3\n        /* \"#utility.yul\":2313:2314   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      add\n        /* \"#utility.yul\":2302:2318   */\n      swap1\n      pop\n        /* \"#utility.yul\":2063:2324   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2330:2426   */\n    tag_107:\n      0x00\n        /* \"#utility.yul\":2396:2420   */\n      tag_109\n        /* \"#utility.yul\":2414:2419   */\n      dup3\n        /* \"#utility.yul\":2396:2420   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2385:2420   */\n      swap1\n      pop\n        /* \"#utility.yul\":2375:2426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2559   */\n    tag_111:\n      0x00\n        /* \"#utility.yul\":2506:2511   */\n      dup2\n        /* \"#utility.yul\":2495:2511   */\n      swap1\n      pop\n        /* \"#utility.yul\":2512:2553   */\n      tag_113\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2512:2553   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2485:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2691   */\n    tag_110:\n      0x00\n        /* \"#utility.yul\":2642:2684   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2635:2640   */\n      dup3\n        /* \"#utility.yul\":2631:2685   */\n      and\n        /* \"#utility.yul\":2620:2685   */\n      swap1\n      pop\n        /* \"#utility.yul\":2610:2691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2697:2774   */\n    tag_96:\n      0x00\n        /* \"#utility.yul\":2763:2768   */\n      dup2\n        /* \"#utility.yul\":2752:2768   */\n      swap1\n      pop\n        /* \"#utility.yul\":2742:2774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2780:2907   */\n    tag_92:\n      0x00\n        /* \"#utility.yul\":2869:2901   */\n      tag_118\n        /* \"#utility.yul\":2895:2900   */\n      dup3\n        /* \"#utility.yul\":2869:2901   */\n      tag_111\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2856:2901   */\n      swap1\n      pop\n        /* \"#utility.yul\":2846:2907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2913:3146   */\n    tag_66:\n      0x00\n        /* \"#utility.yul\":2975:2999   */\n      tag_120\n        /* \"#utility.yul\":2993:2998   */\n      dup3\n        /* \"#utility.yul\":2975:2999   */\n      tag_96\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2966:2999   */\n      swap2\n      pop\n        /* \"#utility.yul\":3021:3087   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3014:3019   */\n      dup3\n        /* \"#utility.yul\":3011:3088   */\n      eq\n        /* \"#utility.yul\":3008:3010   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":3091:3109   */\n      tag_122\n      tag_106\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3008:3010   */\n    tag_121:\n        /* \"#utility.yul\":3138:3139   */\n      0x01\n        /* \"#utility.yul\":3131:3136   */\n      dup3\n        /* \"#utility.yul\":3127:3140   */\n      add\n        /* \"#utility.yul\":3120:3140   */\n      swap1\n      pop\n        /* \"#utility.yul\":2956:3146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3152:3332   */\n    tag_106:\n        /* \"#utility.yul\":3200:3277   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3190:3278   */\n      mstore\n        /* \"#utility.yul\":3297:3301   */\n      0x11\n        /* \"#utility.yul\":3294:3295   */\n      0x04\n        /* \"#utility.yul\":3287:3302   */\n      mstore\n        /* \"#utility.yul\":3321:3325   */\n      0x24\n        /* \"#utility.yul\":3318:3319   */\n      0x00\n        /* \"#utility.yul\":3311:3326   */\n      revert\n        /* \"#utility.yul\":3338:3518   */\n    tag_124:\n        /* \"#utility.yul\":3386:3463   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3383:3384   */\n      0x00\n        /* \"#utility.yul\":3376:3464   */\n      mstore\n        /* \"#utility.yul\":3483:3487   */\n      0x21\n        /* \"#utility.yul\":3480:3481   */\n      0x04\n        /* \"#utility.yul\":3473:3488   */\n      mstore\n        /* \"#utility.yul\":3507:3511   */\n      0x24\n        /* \"#utility.yul\":3504:3505   */\n      0x00\n        /* \"#utility.yul\":3497:3512   */\n      revert\n        /* \"#utility.yul\":3524:3637   */\n    tag_114:\n        /* \"#utility.yul\":3605:3606   */\n      0x04\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3595:3607   */\n      lt\n        /* \"#utility.yul\":3585:3587   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":3611:3629   */\n      tag_128\n      tag_124\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3585:3587   */\n    tag_127:\n        /* \"#utility.yul\":3575:3637   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3643:3765   */\n    tag_71:\n        /* \"#utility.yul\":3716:3740   */\n      tag_130\n        /* \"#utility.yul\":3734:3739   */\n      dup2\n        /* \"#utility.yul\":3716:3740   */\n      tag_107\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3709:3714   */\n      dup2\n        /* \"#utility.yul\":3706:3741   */\n      eq\n        /* \"#utility.yul\":3696:3698   */\n      tag_131\n      jumpi\n        /* \"#utility.yul\":3755:3756   */\n      0x00\n        /* \"#utility.yul\":3752:3753   */\n      dup1\n        /* \"#utility.yul\":3745:3757   */\n      revert\n        /* \"#utility.yul\":3696:3698   */\n    tag_131:\n        /* \"#utility.yul\":3686:3765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3771:3878   */\n    tag_75:\n        /* \"#utility.yul\":3852:3853   */\n      0x04\n        /* \"#utility.yul\":3845:3850   */\n      dup2\n        /* \"#utility.yul\":3842:3854   */\n      lt\n        /* \"#utility.yul\":3832:3834   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":3868:3869   */\n      0x00\n        /* \"#utility.yul\":3865:3866   */\n      dup1\n        /* \"#utility.yul\":3858:3870   */\n      revert\n        /* \"#utility.yul\":3832:3834   */\n    tag_133:\n        /* \"#utility.yul\":3822:3878   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3884:4006   */\n    tag_79:\n        /* \"#utility.yul\":3957:3981   */\n      tag_135\n        /* \"#utility.yul\":3975:3980   */\n      dup2\n        /* \"#utility.yul\":3957:3981   */\n      tag_96\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3950:3955   */\n      dup2\n        /* \"#utility.yul\":3947:3982   */\n      eq\n        /* \"#utility.yul\":3937:3939   */\n      tag_136\n      jumpi\n        /* \"#utility.yul\":3996:3997   */\n      0x00\n        /* \"#utility.yul\":3993:3994   */\n      dup1\n        /* \"#utility.yul\":3986:3998   */\n      revert\n        /* \"#utility.yul\":3937:3939   */\n    tag_136:\n        /* \"#utility.yul\":3927:4006   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e9ebbaa8448a9e847b5ac02b540db3ff0a5eb8a04b3da4e3f4ec63243fbd6bce64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1079:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:284:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "512:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:1",
														"type": ""
													}
												],
												"src": "446:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "572:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "582:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "609:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "591:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "582:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "705:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "707:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "630:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "637:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "627:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:77:1"
															},
															"nodeType": "YulIf",
															"src": "624:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "736:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "747:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "743:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "736:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "558:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "568:3:1",
														"type": ""
													}
												],
												"src": "529:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "910:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "903:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "768:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "997:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1054:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1063:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1066:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1056:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1056:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1056:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1020:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1045:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1027:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1027:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1017:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1017:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:43:1"
															},
															"nodeType": "YulIf",
															"src": "1007:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "990:5:1",
														"type": ""
													}
												],
												"src": "954:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526000600360006101000a81548160ff02191690836003811115610050577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555034801561006157600080fd5b50604051610c89380380610c89833981810160405281019061008391906101a9565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060005b8181101561018d57600260405180602001604052806000815250908060018154018082558091505060019003906000526020600020016000909190919091506000820151816000015550508080610185906101dc565b91505061012f565b505061026b565b6000815190506101a381610254565b92915050565b6000602082840312156101bb57600080fd5b60006101c984828501610194565b91505092915050565b6000819050919050565b60006101e7826101d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561021a57610219610225565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61025d816101d2565b811461026857600080fd5b50565b610a0f8061027a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630121b93f1461005c578063268f1153146100785780634420e48614610094578063508b30c9146100b0578063c19d93fb146100ce575b600080fd5b610076600480360381019061007191906107ac565b6100ec565b005b610092600480360381019061008d9190610783565b610296565b005b6100ae60048036038101906100a9919061075a565b6103cd565b005b6100b86105b2565b6040516100c5919061080e565b60405180910390f35b6100d6610708565b6040516100e391906107f3565b60405180910390f35b6002806003811115610127577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360009054906101000a900460ff16600381111561016f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461017957600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16151515158152602001600282015481525050905080602001518061020a575060028054905083115b1561021457600080fd5b60018160200190151590811515815250508281604001818152505080600001516002848154811061026e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600001600082825461028a9190610829565b92505081905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ee57600080fd5b600360009054906101000a900460ff166003811115610336577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600381111561036f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b101561037a57600080fd5b80600360006101000a81548160ff021916908360038111156103c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555050565b6001806003811115610408577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360009054906101000a900460ff166003811115610450577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461045a57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806105015750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561050b576105ae565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b5050565b600060038060038111156105ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360009054906101000a900460ff166003811115610637577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461064157600080fd5b6000805b60028054905081101561070257816002828154811061068d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020016000015411156106ef57600281815481106106db577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020016000015491508093505b80806106fa906108e0565b915050610645565b50505090565b600360009054906101000a900460ff1681565b60008135905061072a8161099b565b92915050565b60008135905061073f816109b2565b92915050565b600081359050610754816109c2565b92915050565b60006020828403121561076c57600080fd5b600061077a8482850161071b565b91505092915050565b60006020828403121561079557600080fd5b60006107a384828501610730565b91505092915050565b6000602082840312156107be57600080fd5b60006107cc84828501610745565b91505092915050565b6107de816108ce565b82525050565b6107ed816108c4565b82525050565b600060208201905061080860008301846107d5565b92915050565b600060208201905061082360008301846107e4565b92915050565b6000610834826108c4565b915061083f836108c4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561087457610873610929565b5b828201905092915050565b600061088a826108a4565b9050919050565b600081905061089f82610987565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108d982610891565b9050919050565b60006108eb826108c4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561091e5761091d610929565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061099857610997610958565b5b50565b6109a48161087f565b81146109af57600080fd5b50565b600481106109bf57600080fd5b50565b6109cb816108c4565b81146109d657600080fd5b5056fea2646970667358221220e9ebbaa8448a9e847b5ac02b540db3ff0a5eb8a04b3da4e3f4ec63243fbd6bce64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x50 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC89 CODESIZE SUB DUP1 PUSH2 0xC89 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x1A9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP DUP1 DUP1 PUSH2 0x185 SWAP1 PUSH2 0x1DC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12F JUMP JUMPDEST POP POP PUSH2 0x26B JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A3 DUP2 PUSH2 0x254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C9 DUP5 DUP3 DUP6 ADD PUSH2 0x194 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7 DUP3 PUSH2 0x1D2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x21A JUMPI PUSH2 0x219 PUSH2 0x225 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x25D DUP2 PUSH2 0x1D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA0F DUP1 PUSH2 0x27A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x508B30C9 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x127 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x20A JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 GT JUMPDEST ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x26E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x829 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x336 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x36F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST LT ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3C5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x408 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x501 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x50B JUMPI PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5EF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x637 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x702 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x68D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x6EF JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6DB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP JUMPDEST DUP1 DUP1 PUSH2 0x6FA SWAP1 PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x645 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x72A DUP2 PUSH2 0x99B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x73F DUP2 PUSH2 0x9B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x754 DUP2 PUSH2 0x9C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x77A DUP5 DUP3 DUP6 ADD PUSH2 0x71B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7A3 DUP5 DUP3 DUP6 ADD PUSH2 0x730 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7CC DUP5 DUP3 DUP6 ADD PUSH2 0x745 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DE DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7ED DUP2 PUSH2 0x8C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x808 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x823 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP3 PUSH2 0x8C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x83F DUP4 PUSH2 0x8C4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x874 JUMPI PUSH2 0x873 PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88A DUP3 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x89F DUP3 PUSH2 0x987 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 DUP3 PUSH2 0x891 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP3 PUSH2 0x8C4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x91E JUMPI PUSH2 0x91D PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x998 JUMPI PUSH2 0x997 PUSH2 0x958 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x9A4 DUP2 PUSH2 0x87F JUMP JUMPDEST DUP2 EQ PUSH2 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x9BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9CB DUP2 PUSH2 0x8C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xEB 0xBA 0xA8 DIFFICULTY DUP11 SWAP15 DUP5 PUSH28 0x5AC02B540DB3FF0A5EB8A04B3DA4E3F4EC63243FBD6BCE64736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "23:1644:0:-:0;;;307:10;286:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;397:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;455:10;441:11;;:24;;;;;;;;;;;;;;;;;;500:1;471:6;:19;478:11;;;;;;;;;;;471:19;;;;;;;;;;;;;;;:26;;:30;;;;511:9;507:87;531:11;524:4;:18;507:87;;;560:9;575:11;;;;;;;;584:1;575:11;;;560:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:6;;;;;:::i;:::-;;;;507:87;;;;397:201;23:1644;;7:143:1;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:77::-;;512:5;501:16;;491:32;;;:::o;529:233::-;;591:24;609:5;591:24;:::i;:::-;582:33;;637:66;630:5;627:77;624:2;;;707:18;;:::i;:::-;624:2;754:1;747:5;743:13;736:20;;572:190;;;:::o;768:180::-;816:77;813:1;806:88;913:4;910:1;903:15;937:4;934:1;927:15;954:122;1027:24;1045:5;1027:24;:::i;:::-;1020:5;1017:35;1007:2;;1066:1;1063;1056:12;1007:2;997:79;:::o;23:1644:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4009:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "231:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Phase_$27",
																	"nodeType": "YulIdentifier",
																	"src": "260:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:41:1"
														}
													]
												},
												"name": "abi_decode_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:1",
														"type": ""
													}
												],
												"src": "152:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "365:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "375:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "397:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "384:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "375:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "440:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "413:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "413:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "413:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "343:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "351:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "359:5:1",
														"type": ""
													}
												],
												"src": "313:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "524:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "579:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "582:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "572:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "545:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "554:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:32:1"
															},
															"nodeType": "YulIf",
															"src": "534:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "596:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "611:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "615:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "640:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "675:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "686:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "671:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "671:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "695:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "650:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "650:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "640:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "494:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "505:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "517:6:1",
														"type": ""
													}
												],
												"src": "458:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "800:204:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "846:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "855:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "858:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "848:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "848:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "848:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "821:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "830:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "817:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "817:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "842:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:32:1"
															},
															"nodeType": "YulIf",
															"src": "810:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "872:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "887:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "901:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "891:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "916:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "959:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "970:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "955:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "955:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "979:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Phase_$27",
																			"nodeType": "YulIdentifier",
																			"src": "926:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "916:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "770:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "781:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "793:6:1",
														"type": ""
													}
												],
												"src": "726:278:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1076:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1122:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1134:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1124:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1124:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1124:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1097:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1106:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1093:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1093:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1089:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1089:32:1"
															},
															"nodeType": "YulIf",
															"src": "1086:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1148:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1163:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1177:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1167:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1192:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1227:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1238:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1223:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1223:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1247:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1202:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1202:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1192:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1046:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1057:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1069:6:1",
														"type": ""
													}
												],
												"src": "1010:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1349:72:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1366:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1408:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Phase_$27_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1371:36:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:43:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1359:56:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1337:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1344:3:1",
														"type": ""
													}
												],
												"src": "1278:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1492:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1509:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1532:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1514:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1514:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1502:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1480:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1487:3:1",
														"type": ""
													}
												],
												"src": "1427:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1655:130:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1665:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1677:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1673:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1665:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1751:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1764:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1775:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1760:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1701:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1701:77:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1701:77:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Phase_$27__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1627:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1639:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1650:4:1",
														"type": ""
													}
												],
												"src": "1551:234:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1889:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1899:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1911:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1922:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1907:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1899:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1979:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1992:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2003:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1988:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1935:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1935:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1861:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1873:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1884:4:1",
														"type": ""
													}
												],
												"src": "1791:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2063:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2073:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2096:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2078:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2073:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2107:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2130:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2112:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2107:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2270:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2272:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2272:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2272:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2191:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2198:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2266:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2194:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2194:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2188:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2188:81:1"
															},
															"nodeType": "YulIf",
															"src": "2185:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2302:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2313:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2316:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2309:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2302:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2050:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2053:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2059:3:1",
														"type": ""
													}
												],
												"src": "2019:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2375:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2385:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2396:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2385:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2357:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2367:7:1",
														"type": ""
													}
												],
												"src": "2330:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2485:74:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2495:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2506:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2495:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Phase_$27",
																	"nodeType": "YulIdentifier",
																	"src": "2512:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2512:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2512:41:1"
														}
													]
												},
												"name": "cleanup_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2467:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2477:7:1",
														"type": ""
													}
												],
												"src": "2432:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2610:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2620:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2635:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2642:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2631:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2620:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2592:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2602:7:1",
														"type": ""
													}
												],
												"src": "2565:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2742:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2752:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2763:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2752:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2724:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2734:7:1",
														"type": ""
													}
												],
												"src": "2697:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2846:61:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2856:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2895:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Phase_$27",
																	"nodeType": "YulIdentifier",
																	"src": "2869:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:32:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2856:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Phase_$27_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2826:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2836:9:1",
														"type": ""
													}
												],
												"src": "2780:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2956:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2966:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2993:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2975:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2975:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2966:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3089:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3091:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3091:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3091:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3014:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3021:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3011:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3011:77:1"
															},
															"nodeType": "YulIf",
															"src": "3008:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3120:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3131:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3138:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3127:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3120:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2942:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2952:3:1",
														"type": ""
													}
												],
												"src": "2913:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3180:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3197:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3200:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3190:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3190:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3294:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3297:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3287:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3287:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3318:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3311:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3311:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3311:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3152:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3366:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3383:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3386:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3376:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3376:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3376:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3480:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3483:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3473:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3473:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3504:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3507:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3497:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "3338:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3575:62:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3609:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "3611:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3611:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3611:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3598:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3605:1:1",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3595:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:20:1"
															},
															"nodeType": "YulIf",
															"src": "3585:2:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3568:5:1",
														"type": ""
													}
												],
												"src": "3524:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3686:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3743:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3752:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3755:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3745:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3745:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3745:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3709:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3734:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3716:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3716:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3706:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3706:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3699:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:43:1"
															},
															"nodeType": "YulIf",
															"src": "3696:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3679:5:1",
														"type": ""
													}
												],
												"src": "3643:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3822:56:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3856:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3865:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3868:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3858:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3858:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3858:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3845:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3852:1:1",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3842:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3842:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3835:20:1"
															},
															"nodeType": "YulIf",
															"src": "3832:2:1"
														}
													]
												},
												"name": "validator_revert_t_enum$_Phase_$27",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3815:5:1",
														"type": ""
													}
												],
												"src": "3771:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3927:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3984:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3993:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3996:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3986:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3986:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3986:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3950:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3975:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3957:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3957:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3947:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3947:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3940:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:43:1"
															},
															"nodeType": "YulIf",
															"src": "3937:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3920:5:1",
														"type": ""
													}
												],
												"src": "3884:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_enum$_Phase_$27(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Phase_$27(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Phase_$27(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Phase_$27(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Phase_$27_to_t_uint8(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Phase_$27__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Phase_$27_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_Phase_$27(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Phase_$27(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_Phase_$27_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Phase_$27(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Phase_$27(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Phase_$27(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80630121b93f1461005c578063268f1153146100785780634420e48614610094578063508b30c9146100b0578063c19d93fb146100ce575b600080fd5b610076600480360381019061007191906107ac565b6100ec565b005b610092600480360381019061008d9190610783565b610296565b005b6100ae60048036038101906100a9919061075a565b6103cd565b005b6100b86105b2565b6040516100c5919061080e565b60405180910390f35b6100d6610708565b6040516100e391906107f3565b60405180910390f35b6002806003811115610127577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360009054906101000a900460ff16600381111561016f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461017957600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16151515158152602001600282015481525050905080602001518061020a575060028054905083115b1561021457600080fd5b60018160200190151590811515815250508281604001818152505080600001516002848154811061026e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600001600082825461028a9190610829565b92505081905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ee57600080fd5b600360009054906101000a900460ff166003811115610336577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600381111561036f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b101561037a57600080fd5b80600360006101000a81548160ff021916908360038111156103c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555050565b6001806003811115610408577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360009054906101000a900460ff166003811115610450577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461045a57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806105015750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561050b576105ae565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b5050565b600060038060038111156105ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600360009054906101000a900460ff166003811115610637577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461064157600080fd5b6000805b60028054905081101561070257816002828154811061068d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020016000015411156106ef57600281815481106106db577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020016000015491508093505b80806106fa906108e0565b915050610645565b50505090565b600360009054906101000a900460ff1681565b60008135905061072a8161099b565b92915050565b60008135905061073f816109b2565b92915050565b600081359050610754816109c2565b92915050565b60006020828403121561076c57600080fd5b600061077a8482850161071b565b91505092915050565b60006020828403121561079557600080fd5b60006107a384828501610730565b91505092915050565b6000602082840312156107be57600080fd5b60006107cc84828501610745565b91505092915050565b6107de816108ce565b82525050565b6107ed816108c4565b82525050565b600060208201905061080860008301846107d5565b92915050565b600060208201905061082360008301846107e4565b92915050565b6000610834826108c4565b915061083f836108c4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561087457610873610929565b5b828201905092915050565b600061088a826108a4565b9050919050565b600081905061089f82610987565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108d982610891565b9050919050565b60006108eb826108c4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561091e5761091d610929565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061099857610997610958565b5b50565b6109a48161087f565b81146109af57600080fd5b50565b600481106109bf57600080fd5b50565b6109cb816108c4565b81146109d657600080fd5b5056fea2646970667358221220e9ebbaa8448a9e847b5ac02b540db3ff0a5eb8a04b3da4e3f4ec63243fbd6bce64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x508B30C9 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x127 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x20A JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 GT JUMPDEST ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x26E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x829 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x336 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x36F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST LT ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3C5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x408 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x501 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x50B JUMPI PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5EF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x637 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x702 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x68D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x6EF JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6DB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP JUMPDEST DUP1 DUP1 PUSH2 0x6FA SWAP1 PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x645 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x72A DUP2 PUSH2 0x99B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x73F DUP2 PUSH2 0x9B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x754 DUP2 PUSH2 0x9C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x77A DUP5 DUP3 DUP6 ADD PUSH2 0x71B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7A3 DUP5 DUP3 DUP6 ADD PUSH2 0x730 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7CC DUP5 DUP3 DUP6 ADD PUSH2 0x745 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DE DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7ED DUP2 PUSH2 0x8C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x808 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x823 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP3 PUSH2 0x8C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x83F DUP4 PUSH2 0x8C4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x874 JUMPI PUSH2 0x873 PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88A DUP3 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x89F DUP3 PUSH2 0x987 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 DUP3 PUSH2 0x891 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP3 PUSH2 0x8C4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x91E JUMPI PUSH2 0x91D PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x998 JUMPI PUSH2 0x997 PUSH2 0x958 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x9A4 DUP2 PUSH2 0x87F JUMP JUMPDEST DUP2 EQ PUSH2 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x9BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9CB DUP2 PUSH2 0x8C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xEB 0xBA 0xA8 DIFFICULTY DUP11 SWAP15 DUP5 PUSH28 0x5AC02B540DB3FF0A5EB8A04B3DA4E3F4EC63243FBD6BCE64736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "23:1644:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;664:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;827:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1326:339;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;286:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1031:291;1083:10;379:1;370:10;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:10;;;;;;;;;;;;;;;;;362:19;;;;;;1101::::1;1123:6;:18;1130:10;1123:18;;;;;;;;;;;;;;;1101:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1151:6;:12;;;:45;;;;1180:9;:16;;;;1167:10;:29;1151:45;1147:59;;;1198:8;::::0;::::1;1147:59;1228:4;1213:6;:12;;:19;;;;;;;;;::::0;::::1;1253:10;1238:6;:11;;:25;;;::::0;::::1;1304:6;:13;;;1269:9;1279:10;1269:21;;;;;;;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;:::i;:::-;;;;;;;;387:1;1031:291:::0;;:::o;664:159::-;724:11;;;;;;;;;;710:25;;:10;:25;;;707:53;;745:8;;;707:53;773:5;;;;;;;;;;;769:9;;;;;;;;;;;;;;;;:1;:9;;;;;;;;;;;;;;;;;766:37;;;788:8;;;766:37;817:1;809:5;;:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:159;:::o;827:200::-;881:10;379:1;370:10;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:10;;;;;;;;;;;;;;;;;362:19;;;;;;917:11:::1;::::0;::::1;;;;;;;;903:25;;:10;:25;;;;:48;;;;932:6;:13;939:5;932:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;903:48;899:61;;;953:7;;899:61;988:1;965:6:::0;:13:::1;972:5;965:13;;;;;;;;;;;;;;;:20;;:24;;;;1017:5;995:6;:13;1002:5;995:13;;;;;;;;;;;;;;;:19;;;:27;;;;;;;;;;;;;;;;;;387:1;827:200:::0;;:::o;1326:339::-;1394:20;1368:10;379:1;370:10;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:10;;;;;;;;;;;;;;;;;362:19;;;;;;1422:21:::1;1458:9:::0;1453:208:::1;1480:9;:16;;;;1473:4;:23;1453:208;;;1544:16;1516:9;1526:4;1516:15;;;;;;;;;;;;;;;;;;;;;;;:25;;;:44;1512:149;;;1593:9;1603:4;1593:15;;;;;;;;;;;;;;;;;;;;;;;:25;;;1574:44;;1648:4;1630:22;;1512:149;1498:6;;;;;:::i;:::-;;;;1453:208;;;;387:1;1326:339:::0;;:::o;286:31::-;;;;;;;;;;;;;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:139::-;;397:6;384:20;375:29;;413:33;440:5;413:33;:::i;:::-;365:87;;;;:::o;458:262::-;;566:2;554:9;545:7;541:23;537:32;534:2;;;582:1;579;572:12;534:2;625:1;650:53;695:7;686:6;675:9;671:22;650:53;:::i;:::-;640:63;;596:117;524:196;;;;:::o;726:278::-;;842:2;830:9;821:7;817:23;813:32;810:2;;;858:1;855;848:12;810:2;901:1;926:61;979:7;970:6;959:9;955:22;926:61;:::i;:::-;916:71;;872:125;800:204;;;;:::o;1010:262::-;;1118:2;1106:9;1097:7;1093:23;1089:32;1086:2;;;1134:1;1131;1124:12;1086:2;1177:1;1202:53;1247:7;1238:6;1227:9;1223:22;1202:53;:::i;:::-;1192:63;;1148:117;1076:196;;;;:::o;1278:143::-;1371:43;1408:5;1371:43;:::i;:::-;1366:3;1359:56;1349:72;;:::o;1427:118::-;1514:24;1532:5;1514:24;:::i;:::-;1509:3;1502:37;1492:53;;:::o;1551:234::-;;1688:2;1677:9;1673:18;1665:26;;1701:77;1775:1;1764:9;1760:17;1751:6;1701:77;:::i;:::-;1655:130;;;;:::o;1791:222::-;;1922:2;1911:9;1907:18;1899:26;;1935:71;2003:1;1992:9;1988:17;1979:6;1935:71;:::i;:::-;1889:124;;;;:::o;2019:305::-;;2078:20;2096:1;2078:20;:::i;:::-;2073:25;;2112:20;2130:1;2112:20;:::i;:::-;2107:25;;2266:1;2198:66;2194:74;2191:1;2188:81;2185:2;;;2272:18;;:::i;:::-;2185:2;2316:1;2313;2309:9;2302:16;;2063:261;;;;:::o;2330:96::-;;2396:24;2414:5;2396:24;:::i;:::-;2385:35;;2375:51;;;:::o;2432:127::-;;2506:5;2495:16;;2512:41;2547:5;2512:41;:::i;:::-;2485:74;;;:::o;2565:126::-;;2642:42;2635:5;2631:54;2620:65;;2610:81;;;:::o;2697:77::-;;2763:5;2752:16;;2742:32;;;:::o;2780:127::-;;2869:32;2895:5;2869:32;:::i;:::-;2856:45;;2846:61;;;:::o;2913:233::-;;2975:24;2993:5;2975:24;:::i;:::-;2966:33;;3021:66;3014:5;3011:77;3008:2;;;3091:18;;:::i;:::-;3008:2;3138:1;3131:5;3127:13;3120:20;;2956:190;;;:::o;3152:180::-;3200:77;3197:1;3190:88;3297:4;3294:1;3287:15;3321:4;3318:1;3311:15;3338:180;3386:77;3383:1;3376:88;3483:4;3480:1;3473:15;3507:4;3504:1;3497:15;3524:113;3605:1;3598:5;3595:12;3585:2;;3611:18;;:::i;:::-;3585:2;3575:62;:::o;3643:122::-;3716:24;3734:5;3716:24;:::i;:::-;3709:5;3706:35;3696:2;;3755:1;3752;3745:12;3696:2;3686:79;:::o;3771:107::-;3852:1;3845:5;3842:12;3832:2;;3868:1;3865;3858:12;3832:2;3822:56;:::o;3884:122::-;3957:24;3975:5;3957:24;:::i;:::-;3950:5;3947:35;3937:2;;3996:1;3993;3986:12;3937:2;3927:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "515000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changeState(uint8)": "23031",
								"register(address)": "44294",
								"reqWinner()": "infinite",
								"state()": "1326",
								"vote(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23,
									"end": 1667,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 307,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 286,
									"end": 317,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 286,
									"end": 317,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 397,
									"end": 598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 455,
									"end": 465,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 441,
									"end": 452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 452,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 441,
									"end": 465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 500,
									"end": 501,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 471,
									"end": 477,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 478,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 478,
									"end": 489,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 471,
									"end": 490,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 490,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 471,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 497,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 471,
									"end": 501,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 511,
									"end": 520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 531,
									"end": 542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 524,
									"end": 528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 524,
									"end": 542,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 560,
									"end": 569,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 584,
									"end": 585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 586,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 575,
									"end": 586,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 560,
									"end": 587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 507,
									"end": 594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 507,
									"end": 594,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 397,
									"end": 598,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 523,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 446,
									"end": 523,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 446,
									"end": 523,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 501,
									"end": 517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 501,
									"end": 517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 523,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 529,
									"end": 762,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 529,
									"end": 762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 529,
									"end": 762,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 609,
									"end": 614,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 591,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 591,
									"end": 615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 582,
									"end": 615,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 582,
									"end": 615,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 637,
									"end": 703,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 630,
									"end": 635,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 627,
									"end": 704,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 624,
									"end": 626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 707,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 707,
									"end": 725,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 624,
									"end": 626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 754,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 747,
									"end": 752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 743,
									"end": 756,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 736,
									"end": 756,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 736,
									"end": 756,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 572,
									"end": 762,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 816,
									"end": 893,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 813,
									"end": 814,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 913,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 903,
									"end": 918,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 937,
									"end": 941,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 927,
									"end": 942,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1076,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 954,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1045,
									"end": 1050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1027,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1025,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1052,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1066,
									"end": 1067,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1064,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1068,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 1667,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9ebbaa8448a9e847b5ac02b540db3ff0a5eb8a04b3da4e3f4ec63243fbd6bce64736f6c63430008000033",
									".code": [
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "121B93F"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "268F1153"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "4420E486"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "508B30C9"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "C19D93FB"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 1667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1093,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1140,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1151,
											"end": 1196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1180,
											"end": 1196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1177,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1196,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1196,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1151,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1147,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1253,
											"end": 1263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1279,
											"end": 1289,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1322,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 724,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 724,
											"end": 735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 710,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 710,
											"end": 735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 710,
											"end": 720,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 710,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 710,
											"end": 735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 710,
											"end": 735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 707,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 745,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 707,
											"end": 760,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 773,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 769,
											"end": 770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 769,
											"end": 778,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 766,
											"end": 803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 766,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 766,
											"end": 803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 788,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 788,
											"end": 796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 766,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 766,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 809,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 881,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 379,
											"end": 380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 917,
											"end": 928,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 917,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 917,
											"end": 928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 903,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 903,
											"end": 928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 903,
											"end": 913,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 903,
											"end": 928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 903,
											"end": 928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 903,
											"end": 928,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 903,
											"end": 928,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 903,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 903,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 903,
											"end": 951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 903,
											"end": 951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 932,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 932,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 945,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 932,
											"end": 951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 932,
											"end": 951,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 932,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 932,
											"end": 951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 903,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 903,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 899,
											"end": 960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 899,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 899,
											"end": 960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 953,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 899,
											"end": 960,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 899,
											"end": 960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 988,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 965,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 977,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 978,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 965,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 989,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1007,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 995,
											"end": 1014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 1027,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1378,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 379,
											"end": 380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 370,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 370,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 380,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 362,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1661,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1453,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1489,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1480,
											"end": 1496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1496,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1453,
											"end": 1661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1526,
											"end": 1530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1541,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1560,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1512,
											"end": 1661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1603,
											"end": 1607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1574,
											"end": 1618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1574,
											"end": 1618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1652,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1661,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1512,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1453,
											"end": 1661,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1661,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1453,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1665,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 286,
											"end": 317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 317,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 231,
											"end": 251,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 222,
											"end": 251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 212,
											"end": 307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 452,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 313,
											"end": 452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 313,
											"end": 452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 384,
											"end": 404,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 375,
											"end": 404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 375,
											"end": 404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 413,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 440,
											"end": 445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 413,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 413,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 452,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 452,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 458,
											"end": 720,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 458,
											"end": 720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 568,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 563,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 552,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 541,
											"end": 564,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 537,
											"end": 569,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 534,
											"end": 536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 534,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 582,
											"end": 583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 572,
											"end": 584,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 534,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 695,
											"end": 702,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 686,
											"end": 692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 675,
											"end": 684,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 671,
											"end": 693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 650,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 650,
											"end": 703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 650,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 640,
											"end": 703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 640,
											"end": 703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 524,
											"end": 720,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 524,
											"end": 720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 524,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 524,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 524,
											"end": 720,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1004,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 726,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 726,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 821,
											"end": 828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 817,
											"end": 840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 813,
											"end": 845,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 810,
											"end": 812,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 810,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 810,
											"end": 812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 858,
											"end": 859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 848,
											"end": 860,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 810,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 810,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 901,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 979,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 959,
											"end": 968,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 955,
											"end": 977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 926,
											"end": 987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 987,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 926,
											"end": 987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 916,
											"end": 987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 872,
											"end": 997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1004,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1004,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1004,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1010,
											"end": 1272,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1010,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1106,
											"end": 1115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1104,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1121,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1136,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1236,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1202,
											"end": 1255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1202,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1202,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1272,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1278,
											"end": 1421,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1278,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1408,
											"end": 1413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1371,
											"end": 1414,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1371,
											"end": 1414,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1371,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1421,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1427,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1551,
											"end": 1785,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1551,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 1691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1775,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1701,
											"end": 1778,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1778,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1701,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1791,
											"end": 2013,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1791,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 2013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2003,
											"end": 2004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1935,
											"end": 2006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1935,
											"end": 2006,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1935,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2013,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2019,
											"end": 2324,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2019,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2096,
											"end": 2097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2078,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2112,
											"end": 2132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2112,
											"end": 2132,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2112,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2132,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2264,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2268,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2269,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2272,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2324,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2330,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2330,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2426,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2432,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2432,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2559,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2565,
											"end": 2691,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2565,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2635,
											"end": 2640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2685,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2691,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2697,
											"end": 2774,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2697,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2780,
											"end": 2907,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2780,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2895,
											"end": 2900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2869,
											"end": 2901,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2869,
											"end": 2901,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2869,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2907,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2913,
											"end": 3146,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2913,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 3146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2993,
											"end": 2998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2975,
											"end": 2999,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2975,
											"end": 2999,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2975,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3088,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3010,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3008,
											"end": 3010,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3010,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3008,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3139,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3131,
											"end": 3136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3120,
											"end": 3140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3120,
											"end": 3140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 3146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 3146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 3146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 3146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3152,
											"end": 3332,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3152,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3277,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3301,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3294,
											"end": 3295,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3326,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3338,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3463,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3487,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3480,
											"end": 3481,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3473,
											"end": 3488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3504,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3637,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3524,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3606,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3607,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3585,
											"end": 3587,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3611,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3611,
											"end": 3629,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3611,
											"end": 3629,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3611,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3587,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3585,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3575,
											"end": 3637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3575,
											"end": 3637,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3643,
											"end": 3765,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3643,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3734,
											"end": 3739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3741,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3696,
											"end": 3698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3757,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3698,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3696,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3765,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3771,
											"end": 3878,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3771,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3852,
											"end": 3853,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3869,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3870,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3878,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3884,
											"end": 4006,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3884,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3975,
											"end": 3980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3957,
											"end": 3981,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 3981,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3957,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 3955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3982,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3937,
											"end": 3939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 3997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3986,
											"end": 3998,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3937,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4006,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeState(uint8)": "268f1153",
							"register(address)": "4420e486",
							"reqWinner()": "508b30c9",
							"state()": "c19d93fb",
							"vote(uint256)": "0121b93f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numProposal\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum BallotV2.Phase\",\"name\":\"x\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reqWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum BallotV2.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toProposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BallotV2.sol\":\"BallotV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BallotV2.sol\":{\"keccak256\":\"0xd3685de03fedf3cd433366b4bead9ae2eac503237412ec7b0ef67f4aabdbc36e\",\"urls\":[\"bzz-raw://951af9b1c776c134100282c4472458d23728bd53f94e15180f8e0875a37a5477\",\"dweb:/ipfs/QmRQKvH9kJ9hDxrvJZwNc6gaRNpg2V5tCgi5HG8ThfXGAv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "BallotV2.sol:BallotV2",
								"label": "chariperson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 18,
								"contract": "BallotV2.sol:BallotV2",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)8_storage)"
							},
							{
								"astId": 22,
								"contract": "BallotV2.sol:BallotV2",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)11_storage)dyn_storage"
							},
							{
								"astId": 32,
								"contract": "BallotV2.sol:BallotV2",
								"label": "state",
								"offset": 0,
								"slot": "3",
								"type": "t_enum(Phase)27"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)11_storage)dyn_storage": {
								"base": "t_struct(Proposal)11_storage",
								"encoding": "dynamic_array",
								"label": "struct BallotV2.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(Phase)27": {
								"encoding": "inplace",
								"label": "enum BallotV2.Phase",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Voter)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct BallotV2.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)8_storage"
							},
							"t_struct(Proposal)11_storage": {
								"encoding": "inplace",
								"label": "struct BallotV2.Proposal",
								"members": [
									{
										"astId": 10,
										"contract": "BallotV2.sol:BallotV2",
										"label": "voteCount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Voter)8_storage": {
								"encoding": "inplace",
								"label": "struct BallotV2.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "BallotV2.sol:BallotV2",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "BallotV2.sol:BallotV2",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 7,
										"contract": "BallotV2.sol:BallotV2",
										"label": "vote",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BallotV2.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BallotV2.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> BallotV2.sol:27:3:\n   |\n27 |   constructor (uint numProposal) public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 598,
					"file": "BallotV2.sol",
					"start": 397
				},
				"type": "Warning"
			}
		],
		"sources": {
			"BallotV2.sol": {
				"ast": {
					"absolutePath": "BallotV2.sol",
					"exportedSymbols": {
						"BallotV2": [
							241
						]
					},
					"id": 242,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 241,
							"linearizedBaseContracts": [
								241
							],
							"name": "BallotV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "BallotV2.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "65:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "65:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "82:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "82:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "98:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "98:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 241,
									"src": "46:66:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BallotV2.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "138:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "138:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 241,
									"src": "116:41:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "chariperson",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "161:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "161:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "184:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct BallotV2.Voter)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "192:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "184:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct BallotV2.Voter)"
										},
										"valueType": {
											"id": 16,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 15,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "203:5:0"
											},
											"referencedDeclaration": 8,
											"src": "203:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct BallotV2.Voter"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "220:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct BallotV2.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 20,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 19,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "220:8:0"
											},
											"referencedDeclaration": 11,
											"src": "220:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct BallotV2.Proposal"
											}
										},
										"id": 21,
										"nodeType": "ArrayTypeName",
										"src": "220:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct BallotV2.Proposal[]"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "BallotV2.Phase",
									"id": 27,
									"members": [
										{
											"id": 23,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "258:4:0"
										},
										{
											"id": 24,
											"name": "Regs",
											"nodeType": "EnumValue",
											"src": "264:4:0"
										},
										{
											"id": 25,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "270:4:0"
										},
										{
											"id": 26,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "276:4:0"
										}
									],
									"name": "Phase",
									"nodeType": "EnumDefinition",
									"src": "245:37:0"
								},
								{
									"constant": false,
									"functionSelector": "c19d93fb",
									"id": 32,
									"mutability": "mutable",
									"name": "state",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "286:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Phase_$27",
										"typeString": "enum BallotV2.Phase"
									},
									"typeName": {
										"id": 29,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 28,
											"name": "Phase",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 27,
											"src": "286:5:0"
										},
										"referencedDeclaration": 27,
										"src": "286:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$27",
											"typeString": "enum BallotV2.Phase"
										}
									},
									"value": {
										"expression": {
											"id": 30,
											"name": "Phase",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 27,
											"src": "307:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Phase_$27_$",
												"typeString": "type(enum BallotV2.Phase)"
											}
										},
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"src": "307:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$27",
											"typeString": "enum BallotV2.Phase"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "356:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Phase_$27",
																"typeString": "enum BallotV2.Phase"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 38,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "370:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$27",
																	"typeString": "enum BallotV2.Phase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 39,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "379:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$27",
																	"typeString": "enum BallotV2.Phase"
																}
															},
															"src": "370:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "362:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "362:19:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "387:1:0"
											}
										]
									},
									"id": 45,
									"name": "validatePhase",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "p",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "347:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$27",
													"typeString": "enum BallotV2.Phase"
												},
												"typeName": {
													"id": 34,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 33,
														"name": "Phase",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "347:5:0"
													},
													"referencedDeclaration": 27,
													"src": "347:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:9:0"
									},
									"src": "324:69:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "435:163:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "chariperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "441:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 51,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "455:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "455:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "441:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "441:24:0"
											},
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 55,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "471:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV2.Voter storage ref)"
																}
															},
															"id": 57,
															"indexExpression": {
																"id": 56,
																"name": "chariperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "478:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "471:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV2.Voter storage ref"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "471:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "471:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "471:30:0"
											},
											{
												"body": {
													"id": 80,
													"nodeType": "Block",
													"src": "552:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "584:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 75,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "575:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$11_storage_ptr_$",
																				"typeString": "type(struct BallotV2.Proposal storage pointer)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "575:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$11_memory_ptr",
																			"typeString": "struct BallotV2.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$11_memory_ptr",
																			"typeString": "struct BallotV2.Proposal memory"
																		}
																	],
																	"expression": {
																		"id": 72,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "560:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																			"typeString": "struct BallotV2.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "560:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$11_storage_$returns$__$",
																		"typeString": "function (struct BallotV2.Proposal storage ref)"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "560:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 79,
															"nodeType": "ExpressionStatement",
															"src": "560:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "524:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 67,
														"name": "numProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "524:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 81,
												"initializationExpression": {
													"assignments": [
														63
													],
													"declarations": [
														{
															"constant": false,
															"id": 63,
															"mutability": "mutable",
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 81,
															"src": "511:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 62,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "511:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 65,
													"initialValue": {
														"hexValue": "30",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "521:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "511:11:0"
												},
												"loopExpression": {
													"expression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "544:6:0",
														"subExpression": {
															"id": 69,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "544:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 71,
													"nodeType": "ExpressionStatement",
													"src": "544:6:0"
												},
												"nodeType": "ForStatement",
												"src": "507:87:0"
											}
										]
									},
									"id": 83,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "numProposal",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "410:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:18:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:0:0"
									},
									"scope": 241,
									"src": "397:201:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "701:122:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 89,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "710:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "710:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 91,
														"name": "chariperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "724:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "710:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "IfStatement",
												"src": "707:53:0",
												"trueBody": {
													"id": 96,
													"nodeType": "Block",
													"src": "737:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 93,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "745:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "745:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 95,
															"nodeType": "ExpressionStatement",
															"src": "745:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 98,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "769:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 99,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "773:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"src": "769:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "766:37:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "780:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 101,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "788:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "788:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "ExpressionStatement",
															"src": "788:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 106,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "809:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 107,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "817:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$27",
															"typeString": "enum BallotV2.Phase"
														}
													},
													"src": "809:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "809:9:0"
											}
										]
									},
									"functionSelector": "268f1153",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeState",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "685:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$27",
													"typeString": "enum BallotV2.Phase"
												},
												"typeName": {
													"id": 85,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 84,
														"name": "Phase",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "685:5:0"
													},
													"referencedDeclaration": 27,
													"src": "685:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:9:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:0:0"
									},
									"scope": 241,
									"src": "664:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "893:134:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "903:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "903:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 122,
															"name": "chariperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "917:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "903:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 124,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "932:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV2.Voter storage ref)"
																}
															},
															"id": 126,
															"indexExpression": {
																"id": 125,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "939:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "932:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV2.Voter storage ref"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "932:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "903:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 130,
												"nodeType": "IfStatement",
												"src": "899:61:0",
												"trueBody": {
													"functionReturnParameters": 119,
													"id": 129,
													"nodeType": "Return",
													"src": "953:7:0"
												}
											},
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 131,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "965:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV2.Voter storage ref)"
																}
															},
															"id": 133,
															"indexExpression": {
																"id": 132,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "972:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "965:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV2.Voter storage ref"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "965:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "988:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "965:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "965:24:0"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 138,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "995:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV2.Voter storage ref)"
																}
															},
															"id": 140,
															"indexExpression": {
																"id": 139,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1002:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "995:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV2.Voter storage ref"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "995:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1017:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "995:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "995:27:0"
											}
										]
									},
									"functionSelector": "4420e486",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 116,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "881:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$27_$",
															"typeString": "type(enum BallotV2.Phase)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Regs",
													"nodeType": "MemberAccess",
													"src": "881:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												}
											],
											"id": 118,
											"modifierName": {
												"id": 115,
												"name": "validatePhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "867:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "867:25:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "voter",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:15:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:0"
									},
									"scope": 241,
									"src": "827:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "1095:227:0",
										"statements": [
											{
												"assignments": [
													157
												],
												"declarations": [
													{
														"constant": false,
														"id": 157,
														"mutability": "mutable",
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "1101:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
															"typeString": "struct BallotV2.Voter"
														},
														"typeName": {
															"id": 156,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 155,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 8,
																"src": "1101:5:0"
															},
															"referencedDeclaration": 8,
															"src": "1101:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct BallotV2.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"baseExpression": {
														"id": 158,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1123:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct BallotV2.Voter storage ref)"
														}
													},
													"id": 161,
													"indexExpression": {
														"expression": {
															"id": 159,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1130:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1130:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1123:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct BallotV2.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1101:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 163,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1151:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct BallotV2.Voter memory"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1151:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 165,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1167:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 166,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1180:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct BallotV2.Proposal storage ref[] storage ref"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1180:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1167:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1151:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "1147:59:0",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 170,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "1198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1198:8:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 172,
													"nodeType": "ExpressionStatement",
													"src": "1198:8:0"
												}
											},
											{
												"expression": {
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 174,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1213:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct BallotV2.Voter memory"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1213:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1228:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1213:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "1213:19:0"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 180,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct BallotV2.Voter memory"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1238:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "1253:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1238:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "1238:25:0"
											},
											{
												"expression": {
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 186,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1269:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct BallotV2.Proposal storage ref[] storage ref"
																}
															},
															"id": 188,
															"indexExpression": {
																"id": 187,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "1279:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1269:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct BallotV2.Proposal storage ref"
															}
														},
														"id": 189,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1269:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 190,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1304:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct BallotV2.Voter memory"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1304:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1269:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "1269:48:0"
											}
										]
									},
									"functionSelector": "0121b93f",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 151,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1083:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$27_$",
															"typeString": "type(enum BallotV2.Phase)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Vote",
													"nodeType": "MemberAccess",
													"src": "1083:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												}
											],
											"id": 153,
											"modifierName": {
												"id": 150,
												"name": "validatePhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1069:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1069:25:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1045:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:17:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1095:0:0"
									},
									"scope": 241,
									"src": "1031:291:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "1416:249:0",
										"statements": [
											{
												"assignments": [
													205
												],
												"declarations": [
													{
														"constant": false,
														"id": 205,
														"mutability": "mutable",
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 239,
														"src": "1422:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 204,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1422:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 207,
												"initialValue": {
													"hexValue": "30",
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1446:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1422:25:0"
											},
											{
												"body": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 219,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "1516:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct BallotV2.Proposal storage ref[] storage ref"
																	}
																},
																"id": 221,
																"indexExpression": {
																	"id": 220,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "1526:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1516:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct BallotV2.Proposal storage ref"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1516:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 223,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "1544:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1516:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 237,
													"nodeType": "IfStatement",
													"src": "1512:149:0",
													"trueBody": {
														"id": 236,
														"nodeType": "Block",
														"src": "1562:99:0",
														"statements": [
															{
																"expression": {
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 225,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "1574:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 226,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "1593:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct BallotV2.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 228,
																			"indexExpression": {
																				"id": 227,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 209,
																				"src": "1603:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1593:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct BallotV2.Proposal storage ref"
																			}
																		},
																		"id": 229,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "1593:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1574:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 231,
																"nodeType": "ExpressionStatement",
																"src": "1574:44:0"
															},
															{
																"expression": {
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 232,
																		"name": "winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "1630:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 233,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "1648:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1630:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 235,
																"nodeType": "ExpressionStatement",
																"src": "1630:22:0"
															}
														]
													}
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 212,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "1473:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 213,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1480:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct BallotV2.Proposal storage ref[] storage ref"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1480:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1473:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 238,
												"initializationExpression": {
													"assignments": [
														209
													],
													"declarations": [
														{
															"constant": false,
															"id": 209,
															"mutability": "mutable",
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 238,
															"src": "1458:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 208,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1458:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 211,
													"initialValue": {
														"hexValue": "30",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1470:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1458:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1498:6:0",
														"subExpression": {
															"id": 216,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "1498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 218,
													"nodeType": "ExpressionStatement",
													"src": "1498:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1453:208:0"
											}
										]
									},
									"functionSelector": "508b30c9",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 198,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1368:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$27_$",
															"typeString": "type(enum BallotV2.Phase)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Done",
													"nodeType": "MemberAccess",
													"src": "1368:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$27",
														"typeString": "enum BallotV2.Phase"
													}
												}
											],
											"id": 200,
											"modifierName": {
												"id": 197,
												"name": "validatePhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1354:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1354:25:0"
										}
									],
									"name": "reqWinner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:2:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "1394:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:22:0"
									},
									"scope": 241,
									"src": "1326:339:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 242,
							"src": "23:1644:0"
						}
					],
					"src": "0:1667:0"
				},
				"id": 0
			}
		}
	}
}